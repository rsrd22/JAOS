/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Vistas;

import Control.ControlCitas;
import Tabla.TablaConfirmacion;
import Utilidades.Utilidades;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author AT-DESARROLLO
 */
public class VentanaConfirmacion extends javax.swing.JFrame {

    ControlCitas cita = new ControlCitas();
    public DefaultTableModel modelo;
    ArrayList<String[]> ListaGeneral = new ArrayList<>();
    VentanaCitas vcita;
    ArrayList<String[]> listaDatos = new ArrayList<String[]>();
    ArrayList<String[]> listaTabla = new ArrayList<String[]>();
    public boolean[] edit = {false,false, false, true, true, true, false}; 
    TablaConfirmacion tbl;
    private int x, y;
//    int row = -1;
    public int b ;
    public VentanaPrincipal vprin;
    /**public DefaultTableModel modelo;
     * Creates new form VentanaConfirmacion
     */
    boolean venCita = false;
    public VentanaConfirmacion(VentanaPrincipal vprin) {
        initComponents();
        Utilidades.EstablecerIcono(this);
        Calendar cal =Calendar.getInstance();
        this.vprin = vprin;
        this.setLocationRelativeTo(null);
        modelo = new DefaultTableModel();
        
        cal.add(Calendar.DAY_OF_YEAR, 1);
        tbl = new TablaConfirmacion();
        System.out.println("******************+");
        jdFecha.setCalendar(cal);
        CargarTabla();
        b = 0;
    }

    /*
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jdFecha = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblListaConfirmacion = new javax.swing.JTable();
        lblMensaje = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("ConfirmaciÃ³n de Citas");
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(26, 82, 118)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(21, 67, 96));
        jLabel2.setText("Fecha:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, -1, -1));

        jdFecha.setForeground(new java.awt.Color(21, 67, 96));
        jdFecha.setDateFormatString("dd/MM/yyyy");
        jdFecha.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jdFecha.addHierarchyListener(new java.awt.event.HierarchyListener() {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt) {
                jdFechaHierarchyChanged(evt);
            }
        });
        jdFecha.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jdFechaPropertyChange(evt);
            }
        });
        jdFecha.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jdFechaInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                jdFechaCaretPositionChanged(evt);
            }
        });
        jPanel1.add(jdFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, 150, 30));

        tblListaConfirmacion.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblListaConfirmacion.setForeground(new java.awt.Color(21, 67, 96));
        tblListaConfirmacion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Paciente", "Telefonos", "confirmar", "Mensaje", "Cancelar", "R Cita"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblListaConfirmacion.setGridColor(new java.awt.Color(21, 67, 96));
        tblListaConfirmacion.setSelectionBackground(new java.awt.Color(21, 67, 96));
        tblListaConfirmacion.getTableHeader().setReorderingAllowed(false);
        tblListaConfirmacion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblListaConfirmacionMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblListaConfirmacion);
        if (tblListaConfirmacion.getColumnModel().getColumnCount() > 0) {
            tblListaConfirmacion.getColumnModel().getColumn(0).setResizable(false);
            tblListaConfirmacion.getColumnModel().getColumn(1).setResizable(false);
            tblListaConfirmacion.getColumnModel().getColumn(2).setResizable(false);
            tblListaConfirmacion.getColumnModel().getColumn(3).setResizable(false);
            tblListaConfirmacion.getColumnModel().getColumn(4).setResizable(false);
            tblListaConfirmacion.getColumnModel().getColumn(5).setResizable(false);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 970, 500));
        jPanel1.add(lblMensaje, new org.netbeans.lib.awtextra.AbsoluteConstraints(209, 20, -1, -1));

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconos/guardar_1.png"))); // NOI18N
        btnGuardar.setToolTipText("Guardar");
        btnGuardar.setContentAreaFilled(false);
        btnGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGuardar.setMaximumSize(new java.awt.Dimension(81, 57));
        btnGuardar.setMinimumSize(new java.awt.Dimension(81, 57));
        btnGuardar.setPreferredSize(new java.awt.Dimension(32, 32));
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel1.add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 50, 64, 64));

        jPanel2.setBackground(new java.awt.Color(26, 82, 118));
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel2MousePressed(evt);
            }
        });
        jPanel2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel2MouseDragged(evt);
            }
        });
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconos/minimizar.png"))); // NOI18N
        jLabel6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 0, 30, 30));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconos/cerrar_1.png"))); // NOI18N
        jLabel5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 0, 30, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Confirmacion de Pacientes");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 8, 220, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1020, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1020, 640));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void CargarTabla(){
        System.out.println("CARGAR TABLA");
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String fecha = sdf.format(jdFecha.getCalendar().getTime());
        listaDatos = cita.getPacientesxFecha(fecha);
//        System.out.println("listaDatos---->"+listaDatos);
//        System.out.println("listaDatos---->"+listaDatos.size());
        listaTabla = getDatosTabla(listaDatos);
        
        tbl.Vizualizar(this, listaTabla);   
        
    }
    
    private void jdFechaHierarchyChanged(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_jdFechaHierarchyChanged
        System.out.println("ES ESTE");
    }//GEN-LAST:event_jdFechaHierarchyChanged

    private void jdFechaCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jdFechaCaretPositionChanged
        System.out.println("puede ser este tambien");
    }//GEN-LAST:event_jdFechaCaretPositionChanged

    private void jdFechaInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jdFechaInputMethodTextChanged
        System.out.println("Este me suena mas");
    }//GEN-LAST:event_jdFechaInputMethodTextChanged

    private void jdFechaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jdFechaPropertyChange
        
        if(jdFecha.getCalendar()!= null){
            CargarTabla();
//            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
//            String fecha = sdf.format(jdFecha.getCalendar().getTime());
//            listaDatos = cita.getPacientesxFecha(fecha);
//            listaTabla = getDatosTabla(listaDatos);
//            tbl.Vizualizar(this, fecha);    
        }
//            
    }//GEN-LAST:event_jdFechaPropertyChange

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        int rows = tblListaConfirmacion.getRowCount();
        System.out.println("btnGuardarActionPerformed-->"+rows);
        System.out.println("listaTabla--"+listaTabla.size());
        ArrayList<String[]> listaGuardar = new ArrayList<>();
        
        for(int i = 0; i < listaTabla.size(); i++){
            String[] datos = listaTabla.get(i);   
            System.out.println("datos[3]---"+datos[3]+"--------------------datos[6]---"+datos[6]);
            if(datos[6].equals("") ){
                Object conf = tblListaConfirmacion.getValueAt(i, 3);
                Object msj = tblListaConfirmacion.getValueAt(i, 4);
                Object canc = tblListaConfirmacion.getValueAt(i, 5);
                String opc = "";
                if((Boolean)conf){
                    opc = "Confirmar";
                }
                if((Boolean)msj){
                    opc = "Mensaje";
                }
                if((Boolean)canc){
                    opc = "Cancelar";
                }
                if(!opc.equals("")){
                    listaGuardar.add(new String[]{datos[3], datos[1], opc, "0"});
                }
            }else if(datos[6].toUpperCase().equals("MENSAJE") || datos[6].toUpperCase().equals("CONFIRMAR")){
                Object conf = tblListaConfirmacion.getValueAt(i, 3);
                Object msj = tblListaConfirmacion.getValueAt(i, 4);
                Object canc = tblListaConfirmacion.getValueAt(i, 5);
                String opc = "";
                
                if((Boolean)conf){
                    opc = "Confirmar";
                }
                if((Boolean)msj){
                    opc = "Mensaje";
                }
                if((Boolean)canc){
                    opc = "Cancelar";
                }
                if(!opc.equals("") ){ //&& !opc.equals("Mensaje")
                    listaGuardar.add(new String[]{datos[3], datos[1], opc, "1"});
                }
            }
        }
        
        if(listaGuardar.size()>0){
            boolean ingr = cita.GuardarConfirmacion(listaGuardar);
            if(ingr){
                int opc = JOptionPane.showConfirmDialog(null, "La operaciÃ³n se realizo exitosamente.", "Mensaje", JOptionPane.YES_NO_OPTION);
                if(opc == JOptionPane.YES_OPTION){
                    CargarTabla();
                }
            }else{
                JOptionPane.showMessageDialog(null, "Ocurrio un error al momento de realizar la operaciÃ³n.");
            }
        }else{
            JOptionPane.showMessageDialog(null, "No hay datos para realizar la operaciÃ³n.");
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    public void coipia(){
//        //row = tblListaConfirmacion.rowAtPoint(evt.getPoint());
//        
//        int row = tblListaConfirmacion.getSelectedRow();
//        int column = tblListaConfirmacion.getSelectedColumn();
//        
//        boolean dat = getPaciente(row);
//        Object value = tblListaConfirmacion.getValueAt(row, column);
//        System.out.println("row---"+row+"--dat-->"+dat);
//        if(row < tblListaConfirmacion.getRowCount() && row >= 0 && column < tblListaConfirmacion.getColumnCount() && column >= 0 && dat){
//            
//            
//            if(column == 3 || column == 4 || column == 5){
//                if(column == 3){
//                    if(!(Boolean)value){
//                        System.out.println("QUITAR 4 y 5");
//                        tblListaConfirmacion.setValueAt(false, row, 4);
//                        tblListaConfirmacion.setValueAt(false, row, 5);
//                    }
//                }
//                if(column == 4){
//                    if(!(Boolean)value){
//                        System.out.println("QUITAR 3 y 5");
//                        tblListaConfirmacion.setValueAt(false, row, 3);
//                        tblListaConfirmacion.setValueAt(false, row, 5);
//                    }
//                }
//                if(column == 5){
//                    if(!(Boolean)value){
//                        System.out.println("QUITAR 3 y 4");
//                        tblListaConfirmacion.setValueAt(false, row, 3);
//                        tblListaConfirmacion.setValueAt(false, row, 4);
//                    }
//                }
//            }
//            System.out.println("*********************** botn");
//            if(value instanceof JButton){
//                ((JButton)value).doClick();
//                JButton boton = (JButton) value;
//                boolean can = (Boolean) tblListaConfirmacion.getValueAt(row, 5);
//                System.out.println("can--->"+can);
//                if(can){   
//                    if(boton.getName().equals("v")){
//                        try{
//                            ///FILA  //PK_CITA, PAUX, ID, PACIENTE, HORA, ESTADO
//                            String[] datos = tbl.getDatos(row);
//                            System.out.println("b --->"+b);
//                            if(!datos[0].equals("")){
//                                if(b == 0){
//                                    b = 1 ;
//                                    new VentanaCitas(datos[0], datos[1], datos[2], this, vprin).setVisible(true);                                
//                                }
//                                
//                                
//                            }
//                        }catch(Exception ex){
//                           System.out.println(ex.getMessage());
//                        }
//
//                    }
//                }   
//            }
//        }
    }
    private void tblListaConfirmacionMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblListaConfirmacionMouseReleased
        System.out.println("*****************tblListaConfirmacionMouseReleased*****************");
        int row = tblListaConfirmacion.getSelectedRow();
        int col = tblListaConfirmacion.getSelectedColumn();
        row = tblListaConfirmacion.rowAtPoint(evt.getPoint());
        col = tblListaConfirmacion.columnAtPoint(evt.getPoint());
        if(row>=0 && col>=0){
            //boolean dat = getPaciente(row);
            String inf = getDatosPaciente(row);
            Object value = tblListaConfirmacion.getValueAt(row, col);
            System.out.println("value--->"+value);
            System.out.println("inf---->"+inf);
            if(inf.split("<>")[0].equals("0")){
                //edit = new boolean[] {false,false, false, false, false, false, false}; 
                cambiarEstado(row, col, false);
            }else{
                if(inf.split("<>")[0].equals("2")){
                    System.out.println("inf.split(\"<>\")[1].toUpperCase()->"+inf.split("<>")[1].toUpperCase());
                    //edit = new boolean[] {false,false, false, false, false, false, false};
                    if(inf.split("<>")[1].toUpperCase().equals("MENSAJE") || inf.split("<>")[1].toUpperCase().equals("CONFIRMAR")){
                        if(col == 3 || col == 4 || col == 5){
                            if(col == 3){
                                if((Boolean)value){
                                    cambiarEstado(row, 4, false);
                                    cambiarEstado(row, 5, false);
                                }
                            }
                            if(col == 4){
                                if((Boolean)value){
                                    cambiarEstado(row, 3, false);
                                    cambiarEstado(row, 5, false);
                                }
                            }
                            if(col == 5){
                                if((Boolean)value){
                                    cambiarEstado(row, 4, false);
                                    cambiarEstado(row, 3, false);
                                }
                            }
                        }
                        if(value instanceof JButton){
                            ((JButton)value).doClick();
                            JButton boton = (JButton) value;
                            boolean can = (Boolean) tblListaConfirmacion.getValueAt(row, 5);
                            System.out.println("can--->"+can);
                            if(can){   
                                if(boton.getName().equals("v")){
                                    try{
                                        ///FILA  //PK_CITA, PAUX, ID, PACIENTE, HORA, ESTADO
                                        String[] datos = tbl.getDatos(row);
                                        if(!datos[0].equals("")){
                                            if(b == 0){
                                                Map<String, String> mapa = new HashMap<>();
                                                mapa.put("idPaciente", ""+datos[0]);
                                                mapa.put("Paciente", ""+datos[1]);
                                                mapa.put("idCita", ""+datos[2]);
                                                mapa.put("motivo", ""+datos[3]);
                                                new ventanaDiasxHoras(mapa, this).setVisible(true);
                                                //new VentanaCitas(datos[0], datos[1], datos[2], this, vprin).setVisible(true);                                
                                            }
                                        }
                                    }catch(Exception ex){
                                       System.out.println(ex.getMessage());
                                    }

                                }
                            }   
                        }                        
                        
                    }else{
                        if(col == 3){
                            if(inf.split("<>")[1].toUpperCase().equals("CONFIRMAR")){
                                cambiarEstado(row, col, true);
                            }else{
                                cambiarEstado(row, col, false);
                            }
                        }else if(col == 4){//                        
                            if(inf.split("<>")[1].toUpperCase().equals("MENSAJE")){
                                cambiarEstado(row, col, true);
                            }else{
                                cambiarEstado(row, col, false);
                            }
                        }else if(col == 5){
                            if(inf.split("<>")[1].toUpperCase().equals("CANCELAR")){
                                cambiarEstado(row, col, true);
                            }else{
                                cambiarEstado(row, col, false);
                            }
                        }
                    }                                     
                }else{
                    //edit = new boolean[] {false,false, false, true, true, true, false}; 
                    if(col == 3 || col == 4 || col == 5){
                        if(col == 3){
                            if((Boolean)value){
                                cambiarEstado(row, 4, false);
                                cambiarEstado(row, 5, false);
                            }
                        }
                        if(col == 4){
                            if((Boolean)value){
                                cambiarEstado(row, 3, false);
                                cambiarEstado(row, 5, false);
                            }
                        }
                        
                        if(col == 5){
                            if((Boolean)value){
                                cambiarEstado(row, 4, false);
                                cambiarEstado(row, 3, false);
                            }
                        }
                    }

                    if(value instanceof JButton){
                        ((JButton)value).doClick();
                        JButton boton = (JButton) value;
                        boolean can = (Boolean) tblListaConfirmacion.getValueAt(row, 5);
                        System.out.println("can--->"+can);
                        if(can){   
                            if(boton.getName().equals("v")){
                                try{
                                    ///FILA  //PK_CITA, PAUX, ID, PACIENTE, HORA, ESTADO
                                    String[] datos = tbl.getDatos(row);
                                    if(!datos[0].equals("")){
                                        if(b == 0){
                                            //b = 1 ;
                                            Map<String, String> mapa = new HashMap<>();
                                            mapa.put("idPaciente", ""+datos[0]);
                                            mapa.put("Paciente", ""+datos[1]);
                                            mapa.put("idCita", ""+datos[2]);
                                            mapa.put("motivo", ""+datos[3]);
                                            new ventanaDiasxHoras(mapa, this).setVisible(true);
                                            //new VentanaCitas(datos[0], datos[1], datos[2], this, vprin).setVisible(true);                                
                                        }


                                    }
                                }catch(Exception ex){
                                   System.out.println(ex.getMessage());
                                }

                            }
                        }   
                    }
                }
            }
            
        }
        
        System.out.println("*************END MouseReleased****************");  
    }//GEN-LAST:event_tblListaConfirmacionMouseReleased

//    public void  functionCLICK(){
//        System.out.println("*****************tblListaConfirmacionMouseReleased*****************");
//        int row = tblListaConfirmacion.getSelectedRow();
//        int col = tblListaConfirmacion.getSelectedColumn();
//        row = tblListaConfirmacion.rowAtPoint(evt.getPoint());
//        col = tblListaConfirmacion.columnAtPoint(evt.getPoint());
//        if(row>=0 && col>=0){
//            boolean dat = getPaciente(row);
//            String inf = getDatosPaciente(row);
//            Object value = tblListaConfirmacion.getValueAt(row, col);
//            if(inf.split("<>")[0].equals("0")){
//                //edit = new boolean[] {false,false, false, false, false, false, false}; 
//                cambiarEstado(row, col, false);
//            }else{
//                if(inf.split("<>")[0].equals("2")){
//                    //edit = new boolean[] {false,false, false, false, false, false, false};
//                    if(col == 3){
//                        if(inf.split("<>")[1].toUpperCase().equals("CONFIRMAR")){
//                            cambiarEstado(row, col, true);
//                        }else{
//                            cambiarEstado(row, col, false);
//                        }
//                    }else if(col == 4){
//                        
//                        if(inf.split("<>")[1].toUpperCase().equals("MENSAJE")){
//                            cambiarEstado(row, col, true);
//                        }else{
//                            cambiarEstado(row, col, false);
//                        }
//                    }else if(col == 5){
//                        if(inf.split("<>")[1].toUpperCase().equals("CANCELAR")){
//                            cambiarEstado(row, col, true);
//                        }else{
//                            cambiarEstado(row, col, false);
//                        }
//                    }
//                    
//                }else{
//                    //edit = new boolean[] {false,false, false, true, true, true, false}; 
//                    if(col == 3 || col == 4 || col == 5){
//                        if(col == 3){
//                            if((Boolean)value){
//                                cambiarEstado(row, 4, false);
//                                cambiarEstado(row, 5, false);
//                            }
//                        }
//                        if(col == 4){
//                            if((Boolean)value){
//                                cambiarEstado(row, 3, false);
//                                cambiarEstado(row, 5, false);
//                            }
//                        }
//                        if(col == 5){
//                            if((Boolean)value){
//                                cambiarEstado(row, 4, false);
//                                cambiarEstado(row, 3, false);
//                            }
//                        }
//                    }
//
//                    if(value instanceof JButton){
//                        ((JButton)value).doClick();
//                        JButton boton = (JButton) value;
//                        boolean can = (Boolean) tblListaConfirmacion.getValueAt(row, 5);
//                        System.out.println("can--->"+can);
//                        if(can){   
//                            if(boton.getName().equals("v")){
//                                try{
//                                    ///FILA  //PK_CITA, PAUX, ID, PACIENTE, HORA, ESTADO
//                                    String[] datos = tbl.getDatos(row);
//                                    System.out.println("datos--->"+datos.length);
//                                    System.out.println("datos[0]--->"+datos[0]+"/");
//                                    System.out.println("b --->"+b);
//                                    if(!datos[0].equals("")){
//                                        if(b == 0){
//                                            //b = 1 ;
//                                            Map<String, String> mapa = new HashMap<>();
//                                            mapa.put("idPaciente", ""+datos[0]);
//                                            mapa.put("Paciente", ""+datos[1]);
//                                            mapa.put("idCita", ""+datos[2]);
//                                            mapa.put("motivo", ""+datos[3]);
//                                            System.out.println("datos[0]-->"+datos[0]);
//                                            System.out.println("datos[1]-->"+datos[1]);
//                                            System.out.println("datos[2]-->"+datos[2]);
//                                            System.out.println("datos[3]-->"+datos[3]);
//                                            new ventanaDiasxHoras(mapa, this).setVisible(true);
//                                            //new VentanaCitas(datos[0], datos[1], datos[2], this, vprin).setVisible(true);                                
//                                        }
//
//
//                                    }
//                                }catch(Exception ex){
//                                   System.out.println(ex.getMessage());
//                                }
//
//                            }
//                        }   
//                    }
//                }
//            }
//            
//        }
//        
//        System.out.println("*************END MouseReleased****************");  
//    }
    
    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        this.setState(VentanaConfirmacion.ICONIFIED);
    }//GEN-LAST:event_jLabel6MouseClicked

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        this.dispose();
    }//GEN-LAST:event_jLabel5MouseClicked

    private void jPanel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MousePressed
        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_jPanel2MousePressed

    private void jPanel2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseDragged
        this.setLocation(this.getLocation().x + evt.getX()-x, this.getLocation().y + evt.getY()-y);
    }//GEN-LAST:event_jPanel2MouseDragged

    public void cambiarEstado(int row, int col, boolean opc){
        try{           
            Object value = tblListaConfirmacion.getValueAt(row, col);
            System.out.println("value--->"+(Boolean)value);
            tblListaConfirmacion.setValueAt(opc, row, col);
        }catch(Exception e){
            System.out.println("ERROR --cambiarEstado-- "+e.toString());
        }
    }
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaConfirmacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaConfirmacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaConfirmacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaConfirmacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaConfirmacion(null).setVisible(true);
            }
        });
    }

    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuardar;
    public javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    public javax.swing.JScrollPane jScrollPane1;
    public com.toedter.calendar.JDateChooser jdFecha;
    public javax.swing.JLabel lblMensaje;
    public javax.swing.JTable tblListaConfirmacion;
    // End of variables declaration//GEN-END:variables

    private ArrayList<String[]> getDatosTabla(ArrayList<String[]> listaDatos) {
        try{            
//            System.out.println("************getDatosTabla************");
            String HoraDig = "";
            int i = 0, fil = -1;
            String[] datos;
            int minAu = 20;
            int hora = 6;
            int min = 40;
            ArrayList<String[]> lista = new ArrayList<>();
            
            while(i < 13){
                datos = new String[] {"", "", "", "", "", "", "", ""};
                fil++;
                if(min==60){
                    i++;
                    hora +=1; 
                    min = 0;
                }                
                HoraDig = (String.valueOf(hora).length() == 1?"0"+hora:hora)+":"+(String .valueOf(min).length()==1?"0"+min:min);
                ArrayList<String[]> info = getDatos(listaDatos, HoraDig);
//                System.out.println("info--->"+info.size());
                if(info.size()>0){
                    for(int x = 0; x < info.size(); x++){
                        datos = new String[] {"", "", "", "", "", "", "", ""};
                        datos[0] = getHora(HoraDig);
                        datos[1] = info.get(x)[1];
                        datos[2] = info.get(x)[2];
                        datos[3] = info.get(x)[3];
                        datos[4] = info.get(x)[4];
                        datos[5] = info.get(x)[5];
                        datos[6] = info.get(x)[6];
                        datos[7] = info.get(x)[7];

                        lista.add(datos);
                    }
                }else{
                    datos[0] = getHora(HoraDig);
                    datos[1] = "";
                    datos[2] = "";
                    datos[3] = "";
                    datos[4] = "";
                    datos[5] = "";
                    datos[6] = "";
                    datos[7] = "";
                    lista.add(datos);
                }
                min += minAu;
                
            }
            return lista;
        }catch(Exception e){
            e.printStackTrace();
            System.out.println("ERROR --getDatosTabla-- "+e.toString());
            return null;
        }
    }

    
    public String getHora(String hora){
        try{
            String[] dat = hora.split(":");
            int h = Integer.parseInt(dat[0]);
            int  b= 0;
            
            if(h >= 12){
                b = 1;
                if(h>12)
                    h = h-12;
            }
            
            return h+":"+dat[1]+" "+(b==0?"a.":"p.")+" m.";
            
        }catch(Exception e){
            System.out.println("ERROR--getHora--"+e.toString());
            return "";
        }
    }

    private ArrayList<String[]> getDatos(ArrayList<String[]> listaDatos, String HoraDig) {
        try{
            System.out.println("******************getDatos*****************"+HoraDig);
//            System.out.println("****listaDatos--->*****"+listaDatos.size());
            ArrayList<String[]> lista = new ArrayList<String[]>();
            for(int i = 0; i < listaDatos.size(); i++){
//                System.out.println("listaDatos.get(i)[0]--->"+listaDatos.get(i)[0]);
                if(listaDatos.get(i)[0].equals(HoraDig)){
                    lista.add(listaDatos.get(i));
//                    System.out.println("listaDatos.get(i)[1]"+listaDatos.get(i)[1]);
                }
            }
            return lista;
        }catch(Exception e){
            System.out.println("ERROR --getDatos-- "+e.toString());
            return new ArrayList<String[]>();
        }
    }

    private boolean getPaciente(int ind) {
        try{
            
            boolean ret = false;
            System.out.println("********getPaciente****"+ind+"****"+listaTabla.size());  
            for(int i = 0; i < listaTabla.size(); i++){ 
                if(ind == i){
//                    System.out.println("listaTabla.get(i)[3]--->"+listaTabla.get(i)[3]+"////");
//                    System.out.println("listaTabla.get(i)[6]--->"+listaTabla.get(i)[6]+"////");
                    if(listaTabla.get(i)[3].equals("") || !listaTabla.get(i)[6].equals("")){
                        ret =  false;
                    }else{
                        ret = true;
                    }
                }
            }
            System.out.println("****************END getPaciente***************************");
            return ret;
        }catch(Exception e){
            System.out.println("ERROR --getPaciente-- "+e.toString());
            return false;
        }
    }
    
    private String getDatosPaciente(int ind) {
        try{
            
            String ret = "";
            System.out.println("********getPaciente****"+ind+"****"+listaTabla.size());  
            for(int i = 0; i < listaTabla.size(); i++){ 
                if(ind == i){
                    if(!listaTabla.get(i)[3].equals("")){
                        if(listaTabla.get(i)[6].equals("")){///ES PACIENTE Y NO TIENE ESTADO GUARDADO
                            ret = "1<><>END<>";
                        }else{////PACIENTE Y TIENE ESTADO
                            ret = "2<>"+listaTabla.get(i)[6]+"<>END<>";
                        }
                    }else{//NO ES PACIENTE
                        ret = "0<><>END<>";
                    }
                }
            }
            System.out.println("****************END getPaciente***************************");
            return ret;
        }catch(Exception e){
            System.out.println("ERROR --getPaciente-- "+e.toString());
            return "";
        }
    }
}



