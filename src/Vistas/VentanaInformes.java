/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Busquedas.ventanaBusquedapacienteinf;
import Informes.Descripcioninformespdf;
import Utilidades.Utilidades;
import java.awt.Color;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.HashMap;
import java.util.Map;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;

/**
 *
 * @author Acer
 */
public class VentanaInformes extends javax.swing.JFrame {

    public ArrayList<int[]> listaPosiciones;
    public ArrayList<String[]> listacategorias = new ArrayList<>();
    public ArrayList<String[]> listainformes = new ArrayList<>();
    public DefaultListModel modlistCategorias;
    public DefaultListModel modlistInformes;
    public Calendar cale;
    public SimpleDateFormat sdf;
    public Descripcioninformespdf informe;

    public javax.swing.JLabel jLabel1 = new javax.swing.JLabel();

    public javax.swing.JLabel lblPaciente = new javax.swing.JLabel();
    public javax.swing.JTextField txtPaciente = new javax.swing.JTextField();
    public javax.swing.JButton btnBuscarP = new javax.swing.JButton();
    public javax.swing.JLabel lblIdPaciente = new javax.swing.JLabel();
    public javax.swing.JComboBox cbBandera = new javax.swing.JComboBox();
    public javax.swing.JLabel lblBandera = new javax.swing.JLabel();
    public javax.swing.JRadioButton rbInfohistorico = new javax.swing.JRadioButton();
    public com.toedter.calendar.JDateChooser jdFechafinal = new com.toedter.calendar.JDateChooser();
    public com.toedter.calendar.JDateChooser jdFechainicial = new com.toedter.calendar.JDateChooser();
    public javax.swing.JLabel lblFechafinal = new javax.swing.JLabel();
    public javax.swing.JLabel lblFechainicial = new javax.swing.JLabel();
    public javax.swing.JSeparator jSeparator2 = new javax.swing.JSeparator();

    public javax.swing.JCheckBox chPanoramica = new javax.swing.JCheckBox();
    public javax.swing.JLabel jLabel2 = new javax.swing.JLabel();
    public javax.swing.JCheckBox chPanoramicaTodas = new javax.swing.JCheckBox();
    public javax.swing.JCheckBox chRadiografia = new javax.swing.JCheckBox();
    public javax.swing.JCheckBox chRadiografiaTodas = new javax.swing.JCheckBox();
    public javax.swing.JCheckBox chOdontogramaTodas = new javax.swing.JCheckBox();
    public javax.swing.JCheckBox chOdontograma = new javax.swing.JCheckBox();
    public javax.swing.JCheckBox chFotografiaTodas = new javax.swing.JCheckBox();
    public javax.swing.JCheckBox chFotografia = new javax.swing.JCheckBox();
    public javax.swing.JCheckBox chCefalometricoTodas = new javax.swing.JCheckBox();
    public javax.swing.JCheckBox chCefalometrico = new javax.swing.JCheckBox();
    private int x, y;

    /**
     * Creates new form VentanaInformes
     */
    public VentanaInformes() {
        initComponents();
        Utilidades.EstablecerIcono(this);
        cargarArray();
        sdf = new SimpleDateFormat("yyyy-MM-dd");
        cale = Calendar.getInstance();
        listaPosiciones = new ArrayList<>();
        modlistCategorias = new DefaultListModel();
        modlistInformes = new DefaultListModel();
        informe = new Descripcioninformespdf();
        this.setLocationRelativeTo(null);
        llenarCategorias();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listCategoria = new javax.swing.JList();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listInformes = new javax.swing.JList();
        jSeparator1 = new javax.swing.JSeparator();
        PanelOpciones = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        btnGenerar = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Generar Informes");
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(26, 82, 118)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Categoria", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(21, 67, 96))); // NOI18N
        jPanel2.setForeground(new java.awt.Color(26, 82, 118));
        jPanel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        listCategoria.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        listCategoria.setForeground(new java.awt.Color(21, 67, 96));
        listCategoria.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Citas", "Historia Clinica", "Paciente", "Facturas" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        listCategoria.setSelectionBackground(new java.awt.Color(21, 67, 96));
        listCategoria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                listCategoriaMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(listCategoria);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Informe", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(21, 67, 96))); // NOI18N

        listInformes.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        listInformes.setForeground(new java.awt.Color(21, 67, 96));
        listInformes.setSelectionBackground(new java.awt.Color(21, 67, 96));
        listInformes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                listInformesMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(listInformes);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 150, -1));

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 40, 10, 380));

        PanelOpciones.setBackground(new java.awt.Color(255, 255, 255));
        PanelOpciones.setForeground(new java.awt.Color(21, 67, 96));
        PanelOpciones.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        javax.swing.GroupLayout PanelOpcionesLayout = new javax.swing.GroupLayout(PanelOpciones);
        PanelOpciones.setLayout(PanelOpcionesLayout);
        PanelOpcionesLayout.setHorizontalGroup(
            PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 440, Short.MAX_VALUE)
        );
        PanelOpcionesLayout.setVerticalGroup(
            PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 380, Short.MAX_VALUE)
        );

        jPanel1.add(PanelOpciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 40, 440, 380));

        jPanel4.setBackground(new java.awt.Color(26, 82, 118));
        jPanel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel4MousePressed(evt);
            }
        });
        jPanel4.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel4MouseDragged(evt);
            }
        });
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconos/minimizar.png"))); // NOI18N
        jLabel6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });
        jPanel4.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 0, 30, 30));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconos/cerrar_1.png"))); // NOI18N
        jLabel5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });
        jPanel4.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 0, 30, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Gestionar Informes");
        jPanel4.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 8, 152, -1));

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 630, 30));

        jPanel5.setBackground(new java.awt.Color(26, 82, 118));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnGenerar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnGenerar.setForeground(new java.awt.Color(255, 255, 255));
        btnGenerar.setText("Generar");
        btnGenerar.setBorderPainted(false);
        btnGenerar.setContentAreaFilled(false);
        btnGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarActionPerformed(evt);
            }
        });
        jPanel5.add(btnGenerar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 140, 40));

        jPanel1.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 360, 140, 40));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 440));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void listCategoriaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listCategoriaMousePressed
        SeleccionarCategoria();
    }//GEN-LAST:event_listCategoriaMousePressed

    private void listInformesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listInformesMousePressed
        MostrarOpciones();
    }//GEN-LAST:event_listInformesMousePressed

    private void btnGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarActionPerformed
        GenerarN();
    }//GEN-LAST:event_btnGenerarActionPerformed

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        this.setState(VentanaInformes.ICONIFIED);
    }//GEN-LAST:event_jLabel6MouseClicked

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        this.dispose();
    }//GEN-LAST:event_jLabel5MouseClicked

    private void jPanel4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel4MousePressed
        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_jPanel4MousePressed

    private void jPanel4MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel4MouseDragged
        this.setLocation(this.getLocation().x + evt.getX() - x, this.getLocation().y + evt.getY() - y);
    }//GEN-LAST:event_jPanel4MouseDragged

    public void GenerarN() {
        int cat = listCategoria.getSelectedIndex();
        int inf = listInformes.getSelectedIndex();
        Map<String, String> list = new HashMap<String, String>();
        list.put("cat", "" + cat);
        list.put("inf", "" + inf);
        if (cat == 0) {
            if (inf == 0) {//Diario
                if (jdFechainicial.isValid()) {
                    JOptionPane.showMessageDialog(null, "Por favor ingrese la fecha para generar el informe");
                    return;
                }
                list.put("fini", "" + sdf.format(jdFechainicial.getCalendar().getTime()));
            } else if (inf == 1) {//Historico Citas
                list.put("idpac", "" + lblIdPaciente.getText());
            } else if (inf == 2) {//Demanda Inducida
                if (jdFechainicial.isValid()) {
                    JOptionPane.showMessageDialog(null, "Por favor ingrese la fecha inicial para generar el informe");
                    return;
                }
                if (jdFechafinal.isValid()) {
                    JOptionPane.showMessageDialog(null, "Por favor ingrese la fecha final para generar el informe");
                    return;
                }

                String fechai = "" + sdf.format(jdFechainicial.getCalendar().getTime());
                String fechaf = "" + sdf.format(jdFechafinal.getCalendar().getTime());
                String chAusentes = "" + (chPanoramica.isSelected() ? "1" : "0");
                String chCancelados = "" + (chRadiografia.isSelected() ? "1" : "0");
                String chAtendidos = "" + (chOdontograma.isSelected() ? "1" : "0");

                if (chAusentes.equals("0") && chCancelados.equals("0") && chAtendidos.equals("0")) {
                    JOptionPane.showMessageDialog(null, "Por favor seleccionar al menos un filtro para generar el informe");
                    return;
                }

                list.put("fini", fechai);
                list.put("ffin", fechaf);
                list.put("chAusentes", chAusentes);///Ausentes
                list.put("chCancelados", chCancelados);//CAncelados
                list.put("chAtendidos", chAtendidos);//Atendidos
            }
        } else if (cat == 1) {
            if (inf == 0) {//Imprimir Historia Clinica
                list.put("idpac", "" + lblIdPaciente.getText());
                list.put("chP", "" + (chPanoramica.isSelected() ? "1" : "0"));
                list.put("chPT", "" + (chPanoramicaTodas.isSelected() ? "1" : "0"));
                list.put("chR", "" + (chRadiografia.isSelected() ? "1" : "0"));
                list.put("chRT", "" + (chRadiografiaTodas.isSelected() ? "1" : "0"));
                list.put("chO", "" + (chOdontograma.isSelected() ? "1" : "0"));
                list.put("chOT", "" + (chOdontogramaTodas.isSelected() ? "1" : "0"));
                list.put("chF", "" + (chFotografia.isSelected() ? "1" : "0"));
                list.put("chFT", "" + (chFotografiaTodas.isSelected() ? "1" : "0"));
                list.put("chC", "" + (chCefalometrico.isSelected() ? "1" : "0"));
                list.put("chCT", "" + (chCefalometricoTodas.isSelected() ? "1" : "0"));
            } else if (inf == 1) {//Historias Cerradas
                if (jdFechainicial.isValid()) {
                    JOptionPane.showMessageDialog(null, "Por favor ingrese la fecha inicial para generar el informe");
                    return;
                }
                if (jdFechafinal.isValid()) {
                    JOptionPane.showMessageDialog(null, "Por favor ingrese la fecha final para generar el informe");
                    return;
                }
                String fini = "";
                String ffin = "";
                if (jdFechainicial.getCalendar() != null) {
                    fini = "" + sdf.format(jdFechainicial.getCalendar().getTime());
                }
                System.out.println("fini-.-" + fini + "///");
                list.put("fini", "" + fini);
                if (jdFechafinal.getCalendar() != null) {
                    ffin = "" + sdf.format(jdFechafinal.getCalendar().getTime());
                }
                System.out.println("ffin-.-" + ffin + "///");
                list.put("ffin", "" + ffin);
                list.put("rHist", "" + rbInfohistorico.isSelected());
            }
//            }else if(inf == 2){//Historias Inactivas
//                String fini = "";
//                String ffin ="";
//                if(jdFechainicial.getCalendar() != null){
//                    fini = ""+sdf.format(jdFechainicial.getCalendar().getTime());
//                }
//                System.out.println("fini-.-"+ fini+"///");
//                list.put("fini", ""+fini);
//                  if(jdFechafinal.getCalendar() != null){
//                    ffin = ""+sdf.format(jdFechafinal.getCalendar().getTime());
//                }
//                System.out.println("ffin-.-"+ ffin+"///");
//                list.put("ffin", ""+ffin);
//                list.put("rHist",""+rbInfohistorico.isSelected());
//            }
        } else if (cat == 2) {
            if (inf == 0) {//Estados
                list.put("tipo", "" + cbBandera.getSelectedItem());

                if (jdFechainicial.getCalendar() == null) {
                    JOptionPane.showMessageDialog(
                            null,
                            "Por favor ingrese la fecha inicial para generar"
                            + " el informe"
                    );
                    return;
                }

                if (jdFechafinal.getCalendar() == null) {
                    JOptionPane.showMessageDialog(
                            null,
                            "Por favor ingrese la fecha final para generar "
                            + "el informe"
                    );
                    return;
                }
                String fini = sdf.format(jdFechainicial.getCalendar().getTime());
                String ffin = sdf.format(jdFechafinal.getCalendar().getTime());

                list.put("fini", fini);
                list.put("ffin", ffin);
                list.put("rHist", String.valueOf(rbInfohistorico.isSelected()));
                
                System.out.println("list: "+ list.toString());
            } else if (inf == 1) {//Facturas por Mes
                if (jdFechainicial.isValid()) {
                    JOptionPane.showMessageDialog(null, "Por favor ingrese la fecha inicial para generar el informe");
                    return;
                }
                if (jdFechafinal.isValid()) {
                    JOptionPane.showMessageDialog(null, "Por favor ingrese la fecha final para generar el informe");
                    return;
                }
                String fini = "";
                String ffin = "";
                if (jdFechainicial.getCalendar() != null) {
                    fini = "" + sdf.format(jdFechainicial.getCalendar().getTime());
                }
                System.out.println("fini-.-" + fini + "///");
                list.put("fini", "" + fini);
                if (jdFechafinal.getCalendar() != null) {
                    ffin = "" + sdf.format(jdFechafinal.getCalendar().getTime());
                }
                System.out.println("ffin-.-" + ffin + "///");
                list.put("ffin", "" + ffin);
                list.put("rHist", "" + rbInfohistorico.isSelected());
            } else if (inf == 2) {//Recaudo por Dia
                if (jdFechainicial.isValid()) {
                    JOptionPane.showMessageDialog(null, "Por favor ingrese la fecha para generar el informe");
                    return;
                }
                list.put("fini", "" + sdf.format(jdFechainicial.getCalendar().getTime()));
            } else if (inf == 3) {//Recaudo por Mes
                if (jdFechainicial.isValid()) {
                    JOptionPane.showMessageDialog(null, "Por favor ingrese la fecha inicial para generar el informe");
                    return;
                }
                if (jdFechafinal.isValid()) {
                    JOptionPane.showMessageDialog(null, "Por favor ingrese la fecha final para generar el informe");
                    return;
                }
                String fini = "";
                String ffin = "";
                if (jdFechainicial.getCalendar() != null) {
                    fini = "" + sdf.format(jdFechainicial.getCalendar().getTime());
                }
                System.out.println("fini-.-" + fini + "///");
                list.put("fini", "" + fini);
                if (jdFechafinal.getCalendar() != null) {
                    ffin = "" + sdf.format(jdFechafinal.getCalendar().getTime());
                }
                System.out.println("ffin-.-" + ffin + "///");
                list.put("ffin", "" + ffin);
                list.put("rHist", "" + rbInfohistorico.isSelected());
            } else if (inf == 4) {//Recaudo Tipo Pago
                if (jdFechainicial.isValid()) {
                    JOptionPane.showMessageDialog(null, "Por favor ingrese la fecha inicial para generar el informe");
                    return;
                }
                if (jdFechafinal.isValid()) {
                    JOptionPane.showMessageDialog(null, "Por favor ingrese la fecha final para generar el informe");
                    return;
                }
                list.put("tipo", "" + cbBandera.getSelectedItem());
                String fini = "";
                String ffin = "";
                if (jdFechainicial.getCalendar() != null) {
                    fini = "" + sdf.format(jdFechainicial.getCalendar().getTime());
                }
                System.out.println("fini-.-" + fini + "///");
                list.put("fini", "" + fini);
                if (jdFechafinal.getCalendar() != null) {
                    ffin = "" + sdf.format(jdFechafinal.getCalendar().getTime());
                }
                System.out.println("ffin-.-" + ffin + "///");
                list.put("ffin", "" + ffin);
                list.put("rHist", "" + rbInfohistorico.isSelected());
            } else if (inf == 5) {//Abono por Pacientes
                list.put("idpac", "" + lblIdPaciente.getText());
            }
        } else if (cat == 3) {
            if (inf == 0) {//Pacientes Auxiliares
                list.put("tipo", "" + cbBandera.getSelectedItem());
            } else if (inf == 1) {//Pacientes Activos
                if (jdFechainicial.isValid()) {
                    JOptionPane.showMessageDialog(null, "Por favor ingrese la fecha para generar el informe");
                    return;
                }
                list.put("fini", "" + sdf.format(jdFechainicial.getCalendar().getTime()));
            } //            else if(inf == 2){//Pacientes Terminados
            //                list.put("fini", ""+sdf.format(jdFechainicial.getCalendar().getTime()));
            //                list.put("ffin", ""+sdf.format(jdFechafinal.getCalendar().getTime()));
            //                list.put("rHist",""+rbInfohistorico.isSelected());
            //            }
            else if (inf == 2) {//Pacientes por Terminar
                if (jdFechainicial.isValid()) {
                    JOptionPane.showMessageDialog(null, "Por favor ingrese la fecha inicial para generar el informe");
                    return;
                }
                if (jdFechafinal.isValid()) {
                    JOptionPane.showMessageDialog(null, "Por favor ingrese la fecha final para generar el informe");
                    return;
                }
                list.put("fini", "" + sdf.format(jdFechainicial.getCalendar().getTime()));
                list.put("ffin", "" + sdf.format(jdFechafinal.getCalendar().getTime()));
                //list.put("rHist",""+rbInfohistorico.isSelected());  
            }
        }

        String archivo = informe.Generarinformes(list);

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaInformes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaInformes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaInformes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaInformes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaInformes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelOpciones;
    private javax.swing.JButton btnGenerar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JList listCategoria;
    private javax.swing.JList listInformes;
    // End of variables declaration//GEN-END:variables

    private void cargarArray() {
        /////////////////////////// CAT, NOM
        listacategorias.add(new String[]{"0", "Citas"});
        listacategorias.add(new String[]{"1", "Historia Clinica"});
        listacategorias.add(new String[]{"2", "Factura"});
        listacategorias.add(new String[]{"3", "Paciente"});
        /////////////7////////////CAT, ID, NOm    
        listainformes.add(new String[]{"0", "0", "Diario"});
        listainformes.add(new String[]{"0", "1", "Historico Citas"});
        listainformes.add(new String[]{"0", "2", "Demanda Inducida"});
        listainformes.add(new String[]{"1", "0", "Imprimir Historia Clinica"});
        listainformes.add(new String[]{"1", "1", "Historias Cerradas"});
        //listainformes.add(new String[]{"1","2","Historias Inactivas"});
        listainformes.add(new String[]{"2", "0", "Estados"});
        listainformes.add(new String[]{"2", "1", "Facturas por Mes"});
        listainformes.add(new String[]{"2", "2", "Recaudo por Dia"});
        listainformes.add(new String[]{"2", "3", "Recaudo por Mes"});
        listainformes.add(new String[]{"2", "4", "Recaudo Tipo Pago"});
        listainformes.add(new String[]{"2", "5", "Abono por Pacientes"});
        listainformes.add(new String[]{"3", "0", "Pacientes Auxiliares"});
        listainformes.add(new String[]{"3", "1", "Pacientes Activos"});
        //listainformes.add(new String[]{"3","2","Pacientes Terminados"});
        listainformes.add(new String[]{"3", "2", "Pacientes por Terminar"});
    }

    private void llenarCategorias() {
        //cbCate.addItem("Seleccionar");
        for (int i = 0; i < listacategorias.size(); i++) {
            modlistCategorias.addElement(listacategorias.get(i)[1]);
        }
        listCategoria.setModel(modlistCategorias);
    }

    private void llenarInforme(String idcat) {
        LimpiarPanelOpciones();
        modlistInformes.removeAllElements();
        listInformes.setModel(modlistInformes);
        for (String[] lst : listainformes) {
            if (lst[0].equals(idcat)) {
                modlistInformes.addElement(lst[2]);
            }
        }
        listInformes.setModel(modlistInformes);
    }

    private void SeleccionarCategoria() {
        int ind = listCategoria.getSelectedIndex();
        //System.out.println("ind----->"+ind);
        //ind = getCategoria(modlistCategorias.getElementAt());
        llenarInforme("" + ind);
    }

    private String getCategoria(String cat) {
        String retorno = "";
        for (int i = 0; i < listacategorias.size(); i++) {
            if (listacategorias.get(i)[1].equals(cat)) {
                retorno = listacategorias.get(i)[0];
                break;
            }
        }
        return retorno;
    }

    public void BuscarPaciente() {
        //new ventanaBusquedapacienteinf(this).setVisible(true);
        new ventanaBusquedapacienteinf(this).setVisible(true);
        //JOptionPane.showMessageDialog(null, "HELOOOOOOOOO O O O O O O ");
    }

    private void LimpiarPanelOpciones() {
        PanelOpciones.removeAll();
        PanelOpciones.repaint();

        lblPaciente = new javax.swing.JLabel();
        txtPaciente = new javax.swing.JTextField();
        btnBuscarP = new javax.swing.JButton();
        lblIdPaciente = new javax.swing.JLabel();
        cbBandera = new javax.swing.JComboBox();
        lblBandera = new javax.swing.JLabel();
        rbInfohistorico = new javax.swing.JRadioButton();
        jdFechafinal = new com.toedter.calendar.JDateChooser();
        jdFechainicial = new com.toedter.calendar.JDateChooser();
        lblFechafinal = new javax.swing.JLabel();
        lblFechainicial = new javax.swing.JLabel();

        chPanoramica = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        chPanoramicaTodas = new javax.swing.JCheckBox();
        chRadiografia = new javax.swing.JCheckBox();
        chRadiografiaTodas = new javax.swing.JCheckBox();
        chOdontogramaTodas = new javax.swing.JCheckBox();
        chOdontograma = new javax.swing.JCheckBox();
        chFotografiaTodas = new javax.swing.JCheckBox();
        chFotografia = new javax.swing.JCheckBox();

    }

    private void MostrarOpciones() {
        LimpiarPanelOpciones();

        int indC = listCategoria.getSelectedIndex();
        int indI = listInformes.getSelectedIndex();

        if (indC == 0) {//CITAS
            if (indI == 0) {//Diario
                MostrarOpcDiario();
            } else if (indI == 1) {//Historico Citas
                MostrarOpcHistCitas();
            } else if (indI == 2) {//Demanda Inducida
                MostrarOpcDemandaInd();
            }
        } else if (indC == 1) {////Historia Clinica
            if (indI == 0) { //imprimir historia clinica
                MostrarOpcHistClinica();
            } else if (indI == 1) {//Historias cerradas  
                MostrarOpcHistCerradas();
            }
//            else if (indI == 2){//Historias inactivas
//                MostrarOpcHistCerradas();
//            }
        } else if (indC == 2) {////Factura
            if (indI == 0) { //Estados
                MostrarOpcEstados();
            } else if (indI == 1) {//Facturas por Mes
                MostrarOpcHistCerradas();
            } else if (indI == 2) {//Recaudo por Dia
                MostrarOpcDiario();
            } else if (indI == 3) {//Recaudo por Mes
                MostrarOpcHistCerradas();
            } else if (indI == 4) {//Recaudo Tipo Pago
                MostrarOpcTpoPago();
            } else if (indI == 5) {//Abono por Pacientes
                MostrarOpcHistCitas();
            }
        } else if (indC == 3) {////Paciente
            if (indI == 0) { //Pacientes Auxiliares
                MostrarOpcPacAux();
            }
            if (indI == 1) {//Pacientes Activos
                MostrarOpcDiario();
            } //           else if (indI == 2){//Pacientes Terminados  
            //                MostrarOpcHistCerradas();  
            //            }
            else if (indI == 2) {//Pacientes por Terminar 
                MostrarOpcPacxTerminar();
            }
        }

    }

    private void MostrarOpcDiario() {

        System.out.println("*************MostrarOpcDiario***********");
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(21, 67, 96));
        jLabel1.setText("Opciones");

        lblFechainicial.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblFechainicial.setForeground(new java.awt.Color(21, 67, 96));
        lblFechainicial.setText("Fecha: ");
        jdFechainicial.setDateFormatString("dd/MM/yyyy");
        jdFechainicial.setForeground(new java.awt.Color(21, 67, 96));

        javax.swing.GroupLayout PanelOpcionesLayout = new javax.swing.GroupLayout(PanelOpciones);
        PanelOpciones.setLayout(PanelOpcionesLayout);
        PanelOpcionesLayout.setHorizontalGroup(
                PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                .addGap(170, 170, 170)
                                .addComponent(jLabel1))
                        .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(lblFechainicial, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(jdFechainicial, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        PanelOpcionesLayout.setVerticalGroup(
                PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel1)
                                .addGap(30, 30, 30)
                                .addGroup(PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addComponent(lblFechainicial))
                                        .addComponent(jdFechainicial, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        System.out.println("*************END MostrarOpcDiario***********");
    }

    private void MostrarOpcHistCitas() {

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(21, 67, 96));
        jLabel1.setText("Opciones");

        btnBuscarP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconos/lupa_1.png"))); // NOI18N
        btnBuscarP.setBorderPainted(false);
        btnBuscarP.setContentAreaFilled(false);
        //btnBuscarP.setText("Buscar");
        btnBuscarP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarPaciente();
            }
        });

        lblPaciente.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblPaciente.setForeground(new java.awt.Color(21, 67, 96));
        lblPaciente.setText("Paciente:");

        lblIdPaciente.setText("");
        lblIdPaciente.setVisible(false);

        txtPaciente.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtPaciente.setForeground(new java.awt.Color(21, 67, 96));
        txtPaciente.setBorder(null);
        txtPaciente.setText("");
        txtPaciente.setEnabled(false);

        javax.swing.GroupLayout PanelOpcionesLayout = new javax.swing.GroupLayout(PanelOpciones);
        PanelOpciones.setLayout(PanelOpcionesLayout);
        PanelOpcionesLayout.setHorizontalGroup(
                PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                .addGap(170, 170, 170)
                                .addComponent(jLabel1))
                        .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addGroup(PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(lblPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                                        .addComponent(jSeparator2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnBuscarP, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        PanelOpcionesLayout.setVerticalGroup(
                PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(lblPaciente)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txtPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnBuscarP, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                //.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );
    }

    private void MostrarOpcHistCerradas() {
        System.out.println("");
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(21, 67, 96));
        jLabel1.setText("Opciones");

        jdFechafinal.setForeground(new java.awt.Color(21, 67, 96));
        jdFechainicial.setForeground(new java.awt.Color(21, 67, 96));
        jdFechafinal.setDateFormatString("dd/MM/yyyy");
        jdFechainicial.setDateFormatString("dd/MM/yyyy");

        rbInfohistorico.setBackground(new java.awt.Color(255, 255, 255));
        rbInfohistorico.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rbInfohistorico.setForeground(new java.awt.Color(21, 67, 96));
        rbInfohistorico.setText("Informe Historico");
        rbInfohistorico.setHorizontalTextPosition(SwingConstants.LEFT);

        lblFechafinal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblFechafinal.setForeground(new java.awt.Color(21, 67, 96));
        lblFechafinal.setText("Fecha Fin:");

        lblFechainicial.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblFechainicial.setForeground(new java.awt.Color(21, 67, 96));
        lblFechainicial.setText("Fecha Inicio:");

        javax.swing.GroupLayout PanelOpcionesLayout = new javax.swing.GroupLayout(PanelOpciones);
        PanelOpciones.setLayout(PanelOpcionesLayout);
        PanelOpcionesLayout.setHorizontalGroup(
                PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lblFechainicial, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jdFechainicial, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(44, 44, 44)
                                .addComponent(lblFechafinal, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jdFechafinal, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                                .addGap(22, 22, 22))
                        .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                .addGroup(PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                                .addGap(167, 167, 167)
                                                .addComponent(jLabel1))
                                        .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(rbInfohistorico)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelOpcionesLayout.setVerticalGroup(
                PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel1)
                                .addGroup(PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                                .addGap(34, 34, 34)
                                                .addGroup(PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jdFechainicial, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(lblFechainicial)
                                                        .addComponent(jdFechafinal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        )
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelOpcionesLayout.createSequentialGroup()
                                                .addGap(49, 49, 49)
                                                .addComponent(lblFechafinal, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(rbInfohistorico)
                                .addContainerGap(235, Short.MAX_VALUE))
        );
    }

    private void MostrarOpcPacxTerminar() {
        try {
            System.out.println("*************************MostrarOpcPacxTerminar");
            jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
            jLabel1.setForeground(new java.awt.Color(21, 67, 96));
            jLabel1.setText("Opciones");

            jdFechafinal.setForeground(new java.awt.Color(21, 67, 96));
            jdFechainicial.setForeground(new java.awt.Color(21, 67, 96));
            jdFechafinal.setDateFormatString("dd/MM/yyyy");

            jdFechainicial.setDateFormatString("dd/MM/yyyy");
            //rbInfohistorico.setText("Informe Historico");
            //rbInfohistorico.setHorizontalTextPosition(SwingConstants.LEFT);
            lblFechafinal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
            lblFechafinal.setForeground(new java.awt.Color(21, 67, 96));
            lblFechafinal.setText("Fecha Fin:");

            lblFechainicial.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
            lblFechainicial.setForeground(new java.awt.Color(21, 67, 96));
            lblFechainicial.setText("Fecha Inicio:");

            javax.swing.GroupLayout PanelOpcionesLayout = new javax.swing.GroupLayout(PanelOpciones);
            PanelOpciones.setLayout(PanelOpcionesLayout);
            PanelOpcionesLayout.setHorizontalGroup(
                    PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(lblFechainicial, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jdFechainicial, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(32, 32, 32)
                                    .addComponent(lblFechafinal, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jdFechafinal, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                                    .addContainerGap())
                            .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                    .addGap(171, 171, 171)
                                    .addComponent(jLabel1)
                                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );
            PanelOpcionesLayout.setVerticalGroup(
                    PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                    .addGap(21, 21, 21)
                                    .addComponent(jLabel1)
                                    .addGap(32, 32, 32)
                                    .addGroup(PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jdFechainicial, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(lblFechainicial)
                                                    .addComponent(jdFechafinal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelOpcionesLayout.createSequentialGroup()
                                                    .addGap(15, 15, 15)
                                                    .addComponent(lblFechafinal, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addContainerGap(277, Short.MAX_VALUE))
            );

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void MostrarOpcEstados() {

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(21, 67, 96));
        jLabel1.setText("Opciones");

        lblBandera.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblBandera.setForeground(new java.awt.Color(21, 67, 96));
        lblBandera.setText("Estado:");

        cbBandera.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cbBandera.setForeground(new java.awt.Color(21, 67, 96));
        cbBandera.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(21, 67, 96)));
        cbBandera.removeAllItems();
        cbBandera.addItem("Seleccionar");
        cbBandera.addItem("Todos");
        cbBandera.addItem("Anulada");
        cbBandera.addItem("Pagado");
        cbBandera.addItem("Vigente");

        rbInfohistorico.setForeground(new java.awt.Color(21, 67, 96));
        rbInfohistorico.setText("Historico");
        rbInfohistorico.setFont(new java.awt.Font("Tahoma", 1, 12));
        rbInfohistorico.setBackground(Color.WHITE);
        rbInfohistorico.setHorizontalTextPosition(SwingConstants.LEFT);

        jdFechafinal.setForeground(new java.awt.Color(21, 67, 96));
        jdFechafinal.setDateFormatString("dd/MM/yyyy");
        jdFechainicial.setForeground(new java.awt.Color(21, 67, 96));
        jdFechainicial.setDateFormatString("dd/MM/yyyy");

        lblFechafinal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblFechafinal.setForeground(new java.awt.Color(21, 67, 96));
        lblFechafinal.setText("Fecha Fin:");
        lblFechainicial.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblFechainicial.setForeground(new java.awt.Color(21, 67, 96));
        lblFechainicial.setText("Fecha Inicio:");

        javax.swing.GroupLayout PanelOpcionesLayout = new javax.swing.GroupLayout(PanelOpciones);
        PanelOpciones.setLayout(PanelOpcionesLayout);
        PanelOpcionesLayout.setHorizontalGroup(
                PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                                .addComponent(rbInfohistorico)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                        .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                                .addGroup(PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                                                .addComponent(lblFechainicial, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelOpcionesLayout.createSequentialGroup()
                                                                .addComponent(lblBandera, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(27, 27, 27)))
                                                .addGroup(PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                                                .addComponent(jdFechainicial, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(44, 44, 44)
                                                                .addComponent(lblFechafinal, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(jdFechafinal, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE))
                                                        .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                                                .addComponent(cbBandera, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(0, 0, Short.MAX_VALUE)))))
                                .addContainerGap())
                        .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                .addGap(171, 171, 171)
                                .addComponent(jLabel1)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelOpcionesLayout.setVerticalGroup(
                PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jLabel1)
                                .addGap(32, 32, 32)
                                .addGroup(PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblBandera)
                                        .addComponent(cbBandera, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(17, 17, 17)
                                .addGroup(PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jdFechainicial, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(lblFechainicial)
                                                .addComponent(jdFechafinal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelOpcionesLayout.createSequentialGroup()
                                                .addGap(15, 15, 15)
                                                .addComponent(lblFechafinal, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(rbInfohistorico)
                                .addContainerGap(188, Short.MAX_VALUE))
        );
    }

    private void MostrarOpcTpoPago() {
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(21, 67, 96));
        jLabel1.setText("Opciones");

        lblBandera.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblBandera.setForeground(new java.awt.Color(21, 67, 96));
        lblBandera.setText("Tipo Pago:");

        cbBandera.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cbBandera.setForeground(new java.awt.Color(21, 67, 96));
        cbBandera.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(21, 67, 96)));
        cbBandera.removeAllItems();
        cbBandera.addItem("Seleccionar");
        cbBandera.addItem("Todos");
        cbBandera.addItem("Efectivo");
        cbBandera.addItem("Tarjeta");

        rbInfohistorico.setForeground(new java.awt.Color(21, 67, 96));
        rbInfohistorico.setText("Historico");
        rbInfohistorico.setFont(new java.awt.Font("Tahoma", 1, 12));
        rbInfohistorico.setBackground(Color.WHITE);
        rbInfohistorico.setHorizontalTextPosition(SwingConstants.LEFT);

        jdFechafinal.setForeground(new java.awt.Color(21, 67, 96));
        jdFechafinal.setDateFormatString("dd/MM/yyyy");
        jdFechainicial.setForeground(new java.awt.Color(21, 67, 96));
        jdFechainicial.setDateFormatString("dd/MM/yyyy");

        lblFechafinal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblFechafinal.setForeground(new java.awt.Color(21, 67, 96));
        lblFechafinal.setText("Fecha Fin:");
        lblFechainicial.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblFechainicial.setForeground(new java.awt.Color(21, 67, 96));
        lblFechainicial.setText("Fecha Inicio:");

        javax.swing.GroupLayout PanelOpcionesLayout = new javax.swing.GroupLayout(PanelOpciones);
        PanelOpciones.setLayout(PanelOpcionesLayout);
        PanelOpcionesLayout.setHorizontalGroup(
                PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                                .addComponent(rbInfohistorico)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                        .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                                .addGroup(PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(lblFechainicial, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                                                        .addComponent(lblBandera, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                                                .addComponent(jdFechainicial, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(44, 44, 44)
                                                                .addComponent(lblFechafinal, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(jdFechafinal, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE))
                                                        .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                                                .addComponent(cbBandera, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(0, 0, Short.MAX_VALUE)))))
                                .addContainerGap())
                        .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                .addGap(171, 171, 171)
                                .addComponent(jLabel1)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelOpcionesLayout.setVerticalGroup(
                PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jLabel1)
                                .addGap(32, 32, 32)
                                .addGroup(PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblBandera)
                                        .addComponent(cbBandera, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(17, 17, 17)
                                .addGroup(PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jdFechainicial, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(lblFechainicial)
                                                .addComponent(jdFechafinal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelOpcionesLayout.createSequentialGroup()
                                                .addGap(15, 15, 15)
                                                .addComponent(lblFechafinal, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(rbInfohistorico)
                                .addContainerGap(188, Short.MAX_VALUE))
        );
    }

    private void MostrarOpcPacAux() {
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(21, 67, 96));
        jLabel1.setText("Opciones");

        lblBandera.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblBandera.setForeground(new java.awt.Color(21, 67, 96));
        lblBandera.setText("Tipo Pago:");

        cbBandera.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cbBandera.setForeground(new java.awt.Color(21, 67, 96));
        cbBandera.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(21, 67, 96)));
        cbBandera.removeAllItems();
        cbBandera.addItem("Seleccionar");
        cbBandera.addItem("Todos");
        cbBandera.addItem("Activo");
        cbBandera.addItem("Inactivo");

        javax.swing.GroupLayout PanelOpcionesLayout = new javax.swing.GroupLayout(PanelOpciones);
        PanelOpciones.setLayout(PanelOpcionesLayout);
        PanelOpcionesLayout.setHorizontalGroup(
                PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lblBandera, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbBandera, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                .addGap(171, 171, 171)
                                .addComponent(jLabel1)
                                .addContainerGap(186, Short.MAX_VALUE))
        );
        PanelOpcionesLayout.setVerticalGroup(
                PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jLabel1)
                                .addGap(32, 32, 32)
                                .addGroup(PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblBandera)
                                        .addComponent(cbBandera, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(276, Short.MAX_VALUE))
        );
    }

    private void MostrarOpcHistClinica() {
        try {
            jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
            jLabel1.setForeground(new java.awt.Color(21, 67, 96));
            jLabel1.setText("Opciones");

            btnBuscarP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconos/lupa_1.png"))); // NOI18N
            btnBuscarP.setBorderPainted(false);
            btnBuscarP.setContentAreaFilled(false);
            //btnBuscarP.setText("Buscar");
            btnBuscarP.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    BuscarPaciente();
                }
            });

            lblPaciente.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
            lblPaciente.setForeground(new java.awt.Color(21, 67, 96));
            lblPaciente.setText("Paciente:");

            lblIdPaciente.setText("");
            lblIdPaciente.setVisible(false);

            txtPaciente.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
            txtPaciente.setForeground(new java.awt.Color(21, 67, 96));
            txtPaciente.setBorder(null);
            txtPaciente.setText("");
            txtPaciente.setEnabled(false);

            System.out.println("MostrarOpcHistClinica-----");

            chPanoramica.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
            chPanoramica.setForeground(new java.awt.Color(21, 67, 96));
            chPanoramica.setBackground(new java.awt.Color(255, 255, 255));
            chPanoramica.setText("Panoramicas");

            jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
            jLabel2.setForeground(new java.awt.Color(21, 67, 96));
            jLabel2.setText("Imagenes");

            chPanoramicaTodas.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
            chPanoramicaTodas.setForeground(new java.awt.Color(21, 67, 96));
            chPanoramicaTodas.setBackground(new java.awt.Color(255, 255, 255));
            chPanoramicaTodas.setText("Todas");

            chRadiografia.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
            chRadiografia.setForeground(new java.awt.Color(21, 67, 96));
            chRadiografia.setBackground(new java.awt.Color(255, 255, 255));
            chRadiografia.setText("Radiografias");

            chRadiografiaTodas.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
            chRadiografiaTodas.setForeground(new java.awt.Color(21, 67, 96));
            chRadiografiaTodas.setBackground(new java.awt.Color(255, 255, 255));
            chRadiografiaTodas.setText("Todas");

            chOdontogramaTodas.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
            chOdontogramaTodas.setForeground(new java.awt.Color(21, 67, 96));
            chOdontogramaTodas.setBackground(new java.awt.Color(255, 255, 255));
            chOdontogramaTodas.setText("Todas");
            chOdontograma.setSelected(true);

            chOdontograma.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
            chOdontograma.setForeground(new java.awt.Color(21, 67, 96));
            chOdontograma.setBackground(new java.awt.Color(255, 255, 255));
            chOdontograma.setText("Odontograma");

            chFotografiaTodas.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
            chFotografiaTodas.setForeground(new java.awt.Color(21, 67, 96));
            chFotografiaTodas.setBackground(new java.awt.Color(255, 255, 255));
            chFotografiaTodas.setText("Todas");

            chFotografia.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
            chFotografia.setForeground(new java.awt.Color(21, 67, 96));
            chFotografia.setBackground(new java.awt.Color(255, 255, 255));
            chFotografia.setText("Fotografias");

            chCefalometricoTodas.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
            chCefalometricoTodas.setForeground(new java.awt.Color(21, 67, 96));
            chCefalometricoTodas.setBackground(new java.awt.Color(255, 255, 255));
            chCefalometricoTodas.setText("Todas");

            chCefalometrico.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
            chCefalometrico.setForeground(new java.awt.Color(21, 67, 96));
            chCefalometrico.setBackground(new java.awt.Color(255, 255, 255));
            chCefalometrico.setText("Cefalometrico");

            chPanoramica.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    EstadoCheck(0);
                }
            });
            chRadiografia.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    EstadoCheck(1);
                }
            });
            chOdontograma.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    EstadoCheck(2);
                }
            });
            chFotografia.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    EstadoCheck(3);
                }
            });
            chCefalometrico.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    EstadoCheck(4);
                }
            });

            chOdontograma.setEnabled(false);
            chPanoramicaTodas.setEnabled(false);
            chRadiografiaTodas.setEnabled(false);
            chOdontogramaTodas.setEnabled(true);
            chFotografiaTodas.setEnabled(false);
            chCefalometricoTodas.setEnabled(false);

            javax.swing.GroupLayout PanelOpcionesLayout = new javax.swing.GroupLayout(PanelOpciones);
            PanelOpciones.setLayout(PanelOpcionesLayout);
            PanelOpcionesLayout.setHorizontalGroup(
                    PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                    .addGroup(PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                                    .addGap(170, 170, 170)
                                                    .addComponent(jLabel1))
                                            .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                                    .addGap(23, 23, 23)
                                                    .addGroup(PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                                                    .addGroup(PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                            .addComponent(lblPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                            .addComponent(txtPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                                                                            .addComponent(jSeparator2))
                                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                    .addComponent(btnBuscarP, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                            .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                                                    .addComponent(jLabel2)
                                                                    .addGap(14, 14, 14)
                                                                    .addGroup(PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                            .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                                                                    .addComponent(chCefalometrico)
                                                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                    .addComponent(chCefalometricoTodas))
                                                                            .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                                                                    .addComponent(chFotografia)
                                                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                    .addComponent(chFotografiaTodas))
                                                                            .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                                                                    .addComponent(chOdontograma)
                                                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                    .addComponent(chOdontogramaTodas))
                                                                            .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                                                                    .addComponent(chRadiografia)
                                                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                    .addComponent(chRadiografiaTodas))
                                                                            .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                                                                    .addComponent(chPanoramica, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                    .addGap(27, 27, 27)
                                                                                    .addComponent(chPanoramicaTodas)))))))
                                    .addGap(72, 72, 72))
            );
            PanelOpcionesLayout.setVerticalGroup(
                    PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                    .addGap(20, 20, 20)
                                    .addComponent(jLabel1)
                                    .addGap(18, 18, 18)
                                    .addComponent(lblPaciente)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnBuscarP, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    //.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel2)
                                            .addComponent(chPanoramica)
                                            .addComponent(chPanoramicaTodas))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(chRadiografia)
                                            .addComponent(chRadiografiaTodas))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(chOdontograma)
                                            .addComponent(chOdontogramaTodas))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(chFotografia)
                                            .addComponent(chFotografiaTodas))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(chCefalometrico)
                                            .addComponent(chCefalometricoTodas))
                                    .addContainerGap(147, Short.MAX_VALUE))
            );
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void EstadoCheck(int opc) {
        boolean val = false;
        if (opc == 0) {//Panoramica
            if (chPanoramica.isSelected()) {//true
                chPanoramicaTodas.setEnabled(true);
            } else {
                chPanoramicaTodas.setEnabled(false);
                chPanoramicaTodas.setSelected(false);
            }

        } else if (opc == 1) {//RAdiografia
            if (chRadiografia.isSelected()) {//true
                chRadiografiaTodas.setEnabled(true);
            } else {
                chRadiografiaTodas.setEnabled(false);
                chRadiografiaTodas.setSelected(false);
            }
        } else if (opc == 2) {//Odontograma
            if (chOdontograma.isSelected()) {//true
                chOdontogramaTodas.setEnabled(true);
            } else {
                chOdontogramaTodas.setEnabled(false);
                chOdontogramaTodas.setSelected(false);
            }
        } else if (opc == 3) {//Fotografia
            if (chFotografia.isSelected()) {//true
                chFotografiaTodas.setEnabled(true);
            } else {
                chFotografiaTodas.setEnabled(false);
                chFotografiaTodas.setSelected(false);
            }
        } else if (opc == 4) {//Cefalometrico
            if (chCefalometrico.isSelected()) {//true
                chCefalometricoTodas.setEnabled(true);
            } else {
                chCefalometricoTodas.setEnabled(false);
                chCefalometricoTodas.setSelected(false);
            }
        }
    }

    private void MostrarOpcDemandaInd() {
        try {
            jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
            jLabel1.setForeground(new java.awt.Color(21, 67, 96));
            jLabel1.setText("Opciones");

            jdFechafinal.setForeground(new java.awt.Color(21, 67, 96));
            jdFechainicial.setForeground(new java.awt.Color(21, 67, 96));
            jdFechafinal.setDateFormatString("dd/MM/yyyy");
            jdFechainicial.setDateFormatString("dd/MM/yyyy");

            lblFechafinal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
            lblFechafinal.setForeground(new java.awt.Color(21, 67, 96));
            lblFechafinal.setText("Fecha Fin:");

            lblFechainicial.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
            lblFechainicial.setForeground(new java.awt.Color(21, 67, 96));
            lblFechainicial.setText("Fecha Inicio:");

            System.out.println("MostrarOpcHistClinica-----");

            chPanoramica.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
            chPanoramica.setForeground(new java.awt.Color(21, 67, 96));
            chPanoramica.setBackground(new java.awt.Color(255, 255, 255));
            chPanoramica.setText("Ausentes");
            chPanoramica.setSelected(true);

            jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
            jLabel2.setForeground(new java.awt.Color(21, 67, 96));
            jLabel2.setText("Filtro");

            chRadiografia.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
            chRadiografia.setForeground(new java.awt.Color(21, 67, 96));
            chRadiografia.setBackground(new java.awt.Color(255, 255, 255));
            chRadiografia.setText("Cancelados");
            chRadiografia.setSelected(true);

            chOdontograma.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
            chOdontograma.setForeground(new java.awt.Color(21, 67, 96));
            chOdontograma.setBackground(new java.awt.Color(255, 255, 255));
            chOdontograma.setText("Atendidos");
            chOdontograma.setSelected(true);

            javax.swing.GroupLayout PanelOpcionesLayout = new javax.swing.GroupLayout(PanelOpciones);
            PanelOpciones.setLayout(PanelOpcionesLayout);
            PanelOpcionesLayout.setHorizontalGroup(
                    PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                    .addGroup(PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                                    .addContainerGap()
                                                    .addComponent(lblFechainicial, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(jdFechainicial, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(32, 32, 32)
                                                    .addComponent(lblFechafinal, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(jdFechafinal, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE))
                                            .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                                    .addGroup(PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                                                    .addGap(171, 171, 171)
                                                                    .addComponent(jLabel1))
                                                            .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                                                    .addContainerGap()
                                                                    .addComponent(jLabel2)
                                                                    .addGap(48, 48, 48)
                                                                    .addGroup(PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                            .addComponent(chPanoramica)
                                                                            .addComponent(chRadiografia)
                                                                            .addComponent(chOdontograma))))
                                                    .addGap(0, 0, Short.MAX_VALUE)))
                                    .addContainerGap())
            );
            PanelOpcionesLayout.setVerticalGroup(
                    PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelOpcionesLayout.createSequentialGroup()
                                    .addGap(21, 21, 21)
                                    .addComponent(jLabel1)
                                    .addGap(32, 32, 32)
                                    .addGroup(PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jdFechainicial, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(lblFechainicial)
                                                    .addComponent(jdFechafinal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelOpcionesLayout.createSequentialGroup()
                                                    .addGap(15, 15, 15)
                                                    .addComponent(lblFechafinal, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(18, 18, 18)
                                    .addGroup(PanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(chPanoramica))
                                    .addGap(15, 15, 15)
                                    .addComponent(chRadiografia)
                                    .addGap(18, 18, 18)
                                    .addComponent(chOdontograma)
                                    .addContainerGap(157, Short.MAX_VALUE))
            );

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

}
