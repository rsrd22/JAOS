/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import BaseDeDatos.gestorMySQL;
import Busquedas.ventanaBusquedaConcepto;
import Utilidades.Expresiones;
import Utilidades.Utilidades;
import Utilidades.datosUsuario;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author user
 */
public class ventanaConsultarConcepto extends javax.swing.JFrame {

    private gestorMySQL gsql;
    int cons;
    ArrayList<String> consultas;
    String cs;
    public ArrayList<String[]> lista_tratamiento = new ArrayList<>();
    public ArrayList<String[]> lista_Articulos = new ArrayList<>();
    public String tipoCon = " ";
    private int x, y;
    int guardarC = 0;

    /**
     * Creates new form ventanaConsultarConcepto
     */
    public ventanaConsultarConcepto() {
        initComponents();

        Utilidades.EstablecerIcono(this);
        this.setLocationRelativeTo(null);
        // txtNombreConcepto.setVisible(false);
        lblcodigoConcep.setVisible(false);
        cbTipoTratamientos.setVisible(false);
        lblTipoTratamiento.setVisible(false);
        lblCodarticulos.setVisible(false);
        cbArticulos.setVisible(false);
        lblNomArticulos.setVisible(false);

        gsql = new gestorMySQL();

        cargarArticulos();
        cargarTiposdeTratamientos();

        ConceptosEstadoFormulario(0);

    }

//    void limpiar() {
//        txtNombreConcepto.setText("");
//        txtaDesconcepto.setText("");
//        lblcodigoConcep.setText("");
//        lblCodarticulos.setText("");
//        txtValor.setText("");
//        lblNomArticulos.setVisible(false);
//        cbArticulos.setVisible(false);
//        cbArticulos.removeAllItems();
//        cbArticulos.addItem("Seleccionar");
//        lblTipoTratamiento.setVisible(false);
//        cbTipoTratamientos.setVisible(false);
//        cbTipoTratamientos.removeAllItems();
//        cbTipoTratamientos.addItem("Seleccionar");
//        txtNombreConcepto.requestFocusInWindow();
//
//    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtNomconcepto = new javax.swing.JTextField();
        buttonGroup1 = new javax.swing.ButtonGroup();
        Jpanel1 = new javax.swing.JPanel();
        lblNombre = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtaDesconcepto = new javax.swing.JTextArea();
        lblDescripcion = new javax.swing.JLabel();
        txtNombreConcepto = new javax.swing.JTextField();
        lblcodigoConcep = new javax.swing.JLabel();
        lblValor = new javax.swing.JLabel();
        txtValor = new javax.swing.JTextField();
        cbArticulos = new javax.swing.JComboBox();
        lblNomArticulos = new javax.swing.JLabel();
        cbTipoTratamientos = new javax.swing.JComboBox();
        lblCodarticulos = new javax.swing.JLabel();
        lblca = new javax.swing.JLabel();
        lblTipoTratamiento = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        btnCrearconcepto = new javax.swing.JButton();
        btnConsultar = new javax.swing.JButton();
        btnDescartar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        lblNarticulo = new javax.swing.JLabel();
        lblNtratamiento = new javax.swing.JLabel();
        rbTratamientos = new javax.swing.JCheckBox();
        rbArticulos = new javax.swing.JCheckBox();

        txtNomconcepto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomconceptoActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Administrar Conceptos");
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Jpanel1.setBackground(new java.awt.Color(255, 255, 255));
        Jpanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(26, 82, 118)));
        Jpanel1.setPreferredSize(new java.awt.Dimension(733, 437));
        Jpanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblNombre.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblNombre.setForeground(new java.awt.Color(21, 67, 96));
        lblNombre.setText("Nombre");
        Jpanel1.add(lblNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 50, 257, 20));

        txtaDesconcepto.setColumns(20);
        txtaDesconcepto.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtaDesconcepto.setRows(5);
        txtaDesconcepto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtaDesconceptoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtaDesconceptoFocusLost(evt);
            }
        });
        jScrollPane1.setViewportView(txtaDesconcepto);

        Jpanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 150, 390, 80));

        lblDescripcion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblDescripcion.setForeground(new java.awt.Color(21, 67, 96));
        lblDescripcion.setText("Descripcion");
        Jpanel1.add(lblDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 130, -1, -1));

        txtNombreConcepto.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtNombreConcepto.setBorder(null);
        txtNombreConcepto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreConceptoActionPerformed(evt);
            }
        });
        Jpanel1.add(txtNombreConcepto, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, 390, 30));
        Jpanel1.add(lblcodigoConcep, new org.netbeans.lib.awtextra.AbsoluteConstraints(743, 166, 34, 23));

        lblValor.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblValor.setForeground(new java.awt.Color(21, 67, 96));
        lblValor.setText("Valor $");
        Jpanel1.add(lblValor, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 240, 43, -1));

        txtValor.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtValor.setBorder(null);
        txtValor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtValorActionPerformed(evt);
            }
        });
        txtValor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtValorKeyReleased(evt);
            }
        });
        Jpanel1.add(txtValor, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 260, 130, 30));

        cbArticulos.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cbArticulos.setForeground(new java.awt.Color(26, 82, 118));
        cbArticulos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbArticulosItemStateChanged(evt);
            }
        });
        cbArticulos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbArticulosActionPerformed(evt);
            }
        });
        Jpanel1.add(cbArticulos, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 350, 160, 30));

        lblNomArticulos.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblNomArticulos.setForeground(new java.awt.Color(21, 67, 96));
        lblNomArticulos.setText("Articulo");
        Jpanel1.add(lblNomArticulos, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 330, 90, -1));

        cbTipoTratamientos.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cbTipoTratamientos.setForeground(new java.awt.Color(26, 82, 118));
        cbTipoTratamientos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(26, 82, 118)));
        cbTipoTratamientos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbTipoTratamientosItemStateChanged(evt);
            }
        });
        cbTipoTratamientos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTipoTratamientosActionPerformed(evt);
            }
        });
        Jpanel1.add(cbTipoTratamientos, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 350, 210, 30));
        Jpanel1.add(lblCodarticulos, new org.netbeans.lib.awtextra.AbsoluteConstraints(729, 163, 27, 25));
        Jpanel1.add(lblca, new org.netbeans.lib.awtextra.AbsoluteConstraints(783, 63, 20, 15));

        lblTipoTratamiento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblTipoTratamiento.setForeground(new java.awt.Color(21, 67, 96));
        lblTipoTratamiento.setText("Tratamiento");
        Jpanel1.add(lblTipoTratamiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 330, -1, -1));

        jPanel5.setBackground(new java.awt.Color(26, 82, 118));
        jPanel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel5MousePressed(evt);
            }
        });
        jPanel5.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel5MouseDragged(evt);
            }
        });
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconos/minimizar.png"))); // NOI18N
        jLabel7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });
        jPanel5.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 0, 30, 30));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconos/cerrar_1.png"))); // NOI18N
        jLabel5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });
        jPanel5.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 0, 30, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Conceptos");
        jPanel5.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 8, 152, -1));

        Jpanel1.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 520, 30));
        Jpanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, 390, 10));
        Jpanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 290, 130, 10));

        btnCrearconcepto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconos/guardar_1.png"))); // NOI18N
        btnCrearconcepto.setToolTipText("Guardar");
        btnCrearconcepto.setBorderPainted(false);
        btnCrearconcepto.setContentAreaFilled(false);
        btnCrearconcepto.setPreferredSize(new java.awt.Dimension(80, 60));
        btnCrearconcepto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearconceptoActionPerformed(evt);
            }
        });
        Jpanel1.add(btnCrearconcepto, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 410, 64, 64));

        btnConsultar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconos/consultar.png"))); // NOI18N
        btnConsultar.setToolTipText("Buscar");
        btnConsultar.setBorderPainted(false);
        btnConsultar.setContentAreaFilled(false);
        btnConsultar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });
        Jpanel1.add(btnConsultar, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 410, 64, 64));

        btnDescartar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconos/descartar.png"))); // NOI18N
        btnDescartar.setToolTipText("Atras");
        btnDescartar.setBorderPainted(false);
        btnDescartar.setContentAreaFilled(false);
        btnDescartar.setPreferredSize(new java.awt.Dimension(80, 60));
        btnDescartar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDescartarActionPerformed(evt);
            }
        });
        Jpanel1.add(btnDescartar, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 410, 64, 64));

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconos/modificar.png"))); // NOI18N
        btnEditar.setToolTipText("Editar");
        btnEditar.setBorderPainted(false);
        btnEditar.setContentAreaFilled(false);
        btnEditar.setPreferredSize(new java.awt.Dimension(80, 60));
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        Jpanel1.add(btnEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 410, 64, 64));

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconos/eliminar.png"))); // NOI18N
        btnEliminar.setToolTipText("Eliminar");
        btnEliminar.setBorderPainted(false);
        btnEliminar.setContentAreaFilled(false);
        btnEliminar.setPreferredSize(new java.awt.Dimension(80, 60));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        Jpanel1.add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 410, 64, 64));

        lblNarticulo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblNarticulo.setForeground(new java.awt.Color(26, 82, 118));
        Jpanel1.add(lblNarticulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 300, 220, 30));

        lblNtratamiento.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblNtratamiento.setForeground(new java.awt.Color(26, 82, 118));
        Jpanel1.add(lblNtratamiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 300, 210, 30));

        rbTratamientos.setBackground(new java.awt.Color(255, 255, 255));
        rbTratamientos.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rbTratamientos.setForeground(new java.awt.Color(21, 67, 96));
        rbTratamientos.setText("Tratamiento");
        rbTratamientos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                rbTratamientosMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                rbTratamientosMouseReleased(evt);
            }
        });
        Jpanel1.add(rbTratamientos, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 250, -1, -1));

        rbArticulos.setBackground(new java.awt.Color(255, 255, 255));
        rbArticulos.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rbArticulos.setForeground(new java.awt.Color(21, 67, 96));
        rbArticulos.setText("Articulo");
        rbArticulos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                rbArticulosMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                rbArticulosMouseReleased(evt);
            }
        });
        Jpanel1.add(rbArticulos, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 250, -1, -1));

        getContentPane().add(Jpanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 520, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNomconceptoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomconceptoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomconceptoActionPerformed

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
//        this.dispose();
        new ventanaBusquedaConcepto(this).setVisible(true);

    }//GEN-LAST:event_btnConsultarActionPerformed

    private void txtNombreConceptoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreConceptoActionPerformed
        txtNombreConcepto.transferFocus();
    }//GEN-LAST:event_txtNombreConceptoActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        String nombreConcepto = Utilidades.decodificarElemento(txtNombreConcepto.getText());
        if (nombreConcepto.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Seleccione un concepto para actualizar");
            return;
        }

        ConceptosEstadoFormulario(2);


    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        String codigoConcepto = lblcodigoConcep.getText();

        String sq = "SELECT  COUNT(con.`pk_concepto`) FROM conceptos con INNER JOIN pagosxconceptos pag\n"
                + "WHERE pag.`pfk_concepto`=con.`pk_concepto` AND pag.`pfk_concepto`='" + codigoConcepto + "'";
        String count = gsql.unicoDato(sq);

        System.out.println("cod---" + count);

        if (codigoConcepto.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Seleccione un Concepto para Eliminar");
            return;
        }

        if (Integer.parseInt(count) <= 0) {
            try {

                consultas = new ArrayList<>();
                consultas.add("DELETE FROM conceptos WHERE pk_concepto='" + codigoConcepto + "'");

                int opcion = JOptionPane.showConfirmDialog(null, "Desea eliminar el concepto");
                if (opcion == JOptionPane.YES_OPTION) {
                    if (gsql.EnviarConsultas(consultas)) {
                        JOptionPane.showMessageDialog(null, "Concepto eliminado");
                    } else {
                        System.out.println("No se pudo elinimar el concepto");
                    }
                }

            } catch (Exception e) {
            }
            limpiarVentanaConcepto();
//            cargarArticulos();
//            cargarTiposdeTratamientos();
        } else {
            JOptionPane.showMessageDialog(null, "El concepto no se puede eliminar porque esta asociado a una factura");
            limpiarVentanaConcepto();
//            cargarArticulos();
//            cargarTiposdeTratamientos();
        }
        System.out.println("entro");
        btnCrearconcepto.setEnabled(true);

    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnCrearconceptoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearconceptoActionPerformed
        if (guardarC == 0) {
            Guardar();

        } else {
            Actualizar();
        }
//        cargarArticulos();
//        cargarTiposdeTratamientos();

    }//GEN-LAST:event_btnCrearconceptoActionPerformed

    public void Guardar() {
        String nombreConcepto = Utilidades.decodificarElemento(txtNombreConcepto.getText());
        String descripcionConcep = Utilidades.decodificarElemento(txtaDesconcepto.getText());
        String codigoConcepto = lblcodigoConcep.getText();
        String valorConcepto = txtValor.getText();
        String SQL;
        String cod_art;
//        String pk_art = (String) cbArticulos.getSelectedItem();
        cod_art = lblCodarticulos.getText();
        String valor = valorConcepto;

        int ind = cbTipoTratamientos.getSelectedIndex();
        String pkt = (ind == 0 ? null : lista_tratamiento.get(ind - 1)[0]);
        int num = cbArticulos.getSelectedIndex();
        String pk_A = (num == 0 ? null : lista_Articulos.get(num - 1)[0]);

        if (nombreConcepto.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor ingresar el nombre del concepto");
            txtNombreConcepto.requestFocusInWindow();
            return;
        }
        if (descripcionConcep.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor ingresar la descripción del concepto");
            txtaDesconcepto.requestFocusInWindow();
            return;
        }
        if (valorConcepto.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor ingresar un valor para el concepto ");
            txtValor.requestFocusInWindow();
            return;
        }
//        if (rbArticulos.isSelected() == false && rbTratamientos.isSelected() == false) {
//            JOptionPane.showMessageDialog(null, "Por favor relacione el concepto a un Articulo o Tratamiento ");
//            rbArticulos.requestFocusInWindow();
//            return;
//        }

        if (rbArticulos.isSelected() == true) {
            txtValor.setEnabled(true);
            if (cbArticulos.getSelectedItem() == "Seleccionar") {
                JOptionPane.showMessageDialog(null, "Por favor seleccione un articulo para el concepto ");
                cbTipoTratamientos.requestFocusInWindow();
                return;
            }
        }

        if (rbTratamientos.isSelected() == true) {
            if (cbTipoTratamientos.getSelectedItem() == "Seleccionar") {
                JOptionPane.showMessageDialog(null, "Por favor seleccione un tratamiento para el concepto ");
                cbTipoTratamientos.requestFocusInWindow();
                return;
            }
        }

        valor = valor.replace("$", " ").replace(".", " ");

        String sql = "SELECT  IFNULL(MAX(`pk_concepto`),0)+1 FROM `conceptos`";
        String pk = gsql.unicoDato(sql);

        try {
            ArrayList<String> consulta = new ArrayList<>();
            System.out.println("usuario-----" + datosUsuario.datos.size());
            System.out.println("0,0---" + datosUsuario.datos.get(0).length);
            SQL = "INSERT INTO conceptos VALUES";
            SQL += "(" + pk + "," + (rbTratamientos.isSelected() ? "0" : (rbArticulos.isSelected() ? pk_A : "0")) + ", " + (rbArticulos.isSelected() ? "2" : (rbTratamientos.isSelected() ? "1" : "3"))
                    + " ,'" + nombreConcepto.trim() + "', '" + descripcionConcep.trim() + "', '"
                    + datosUsuario.datos.get(0)[0] + "', NOW(), NULL,NULL, " + valor + ", " + pkt + ")";
            consulta.add(SQL);
            gsql.EnviarConsultas(consulta);
            JOptionPane.showMessageDialog(null, "Concepto Creado");

        } catch (Exception e) {
            e.printStackTrace();
        }

        ConceptosEstadoFormulario(0);
    }

    public void Actualizar() {

        String nombreConcepto = Utilidades.decodificarElemento(
                txtNombreConcepto.getText()
        );
        String descripcionConcep = Utilidades.decodificarElemento(
                txtaDesconcepto.getText()
        );
        String codigoConcepto = lblcodigoConcep.getText();
        String valorConcepto = txtValor.getText();
        String valor = valorConcepto;

        if (nombreConcepto.isEmpty()) {
            JOptionPane.showMessageDialog(
                    null, "Seleccione un concepto para actualizar"
            );
            return;
        }

        valor = valor.replace("$ ", "").replace(".", "");

        try {
            String sql = "UPDATE conceptos SET "
                    + "nombre='" + nombreConcepto + "',"
                    + "descripcion= '" + descripcionConcep + "',"
                    + "valor='" + valor + "' "
                    + "WHERE `pk_concepto`= '" + codigoConcepto + "'";
            cons = gsql.UPDATE(sql);

            JOptionPane.showMessageDialog(null, "Datos actualizados ");

            System.out.println("Success");
        } catch (Exception e) {
            System.err.println("Error: " + e.getMessage());
        }
        
        ConceptosEstadoFormulario(0);

    }

    private void txtValorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtValorActionPerformed

    }//GEN-LAST:event_txtValorActionPerformed

    private void txtaDesconceptoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtaDesconceptoFocusGained

    }//GEN-LAST:event_txtaDesconceptoFocusGained

    private void txtaDesconceptoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtaDesconceptoFocusLost

    }//GEN-LAST:event_txtaDesconceptoFocusLost

    private void cbArticulosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbArticulosItemStateChanged
        int ind = cbArticulos.getSelectedIndex();
        if (ind > 0) {
            txtValor.setText(lista_Articulos.get(ind - 1)[2]);
            return;
        }
    }//GEN-LAST:event_cbArticulosItemStateChanged

    private void cbArticulosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbArticulosActionPerformed
        if (rbArticulos.isSelected() == true) {
            txtValor.setEnabled(false);
        }

    }//GEN-LAST:event_cbArticulosActionPerformed

    private void btnDescartarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDescartarActionPerformed

        ConceptosEstadoFormulario(0);

    }//GEN-LAST:event_btnDescartarActionPerformed

    private void cbTipoTratamientosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbTipoTratamientosItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cbTipoTratamientosItemStateChanged

    private void txtValorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorKeyReleased
        Expresiones.procesarSoloNumeros(txtValor);
    }//GEN-LAST:event_txtValorKeyReleased

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        this.setState(ventanaConsultarConcepto.ICONIFIED);
    }//GEN-LAST:event_jLabel7MouseClicked

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        this.dispose();
    }//GEN-LAST:event_jLabel5MouseClicked

    private void jPanel5MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel5MousePressed
        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_jPanel5MousePressed

    private void jPanel5MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel5MouseDragged
        this.setLocation(this.getLocation().x + evt.getX() - x, this.getLocation().y + evt.getY() - y);
    }//GEN-LAST:event_jPanel5MouseDragged

    private void cbTipoTratamientosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTipoTratamientosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbTipoTratamientosActionPerformed

    private void rbArticulosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbArticulosMousePressed

    }//GEN-LAST:event_rbArticulosMousePressed

    private void rbTratamientosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbTratamientosMousePressed

    }//GEN-LAST:event_rbTratamientosMousePressed

    private void rbArticulosMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbArticulosMouseReleased
        if (rbArticulos.isEnabled()) {
            if (rbTratamientos.isSelected()) {
                rbTratamientos.setSelected(false);
            }
            EstablecertipodeConcepto();
        }
    }//GEN-LAST:event_rbArticulosMouseReleased

    private void rbTratamientosMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbTratamientosMouseReleased
        if (rbTratamientos.isEnabled()) {
            if (rbArticulos.isSelected()) {
                rbArticulos.setSelected(false);
            }
            EstablecertipodeConcepto();
        }
    }//GEN-LAST:event_rbTratamientosMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ventanaConsultarConcepto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ventanaConsultarConcepto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ventanaConsultarConcepto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ventanaConsultarConcepto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ventanaConsultarConcepto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JPanel Jpanel1;
    public javax.swing.JButton btnConsultar;
    public javax.swing.JButton btnCrearconcepto;
    private javax.swing.JButton btnDescartar;
    public javax.swing.JButton btnEditar;
    public javax.swing.JButton btnEliminar;
    private javax.swing.ButtonGroup buttonGroup1;
    public javax.swing.JComboBox cbArticulos;
    public javax.swing.JComboBox cbTipoTratamientos;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    public javax.swing.JLabel lblCodarticulos;
    public javax.swing.JLabel lblDescripcion;
    public javax.swing.JLabel lblNarticulo;
    public javax.swing.JLabel lblNomArticulos;
    public javax.swing.JLabel lblNombre;
    public javax.swing.JLabel lblNtratamiento;
    public javax.swing.JLabel lblTipoTratamiento;
    private javax.swing.JLabel lblValor;
    public javax.swing.JLabel lblca;
    public javax.swing.JLabel lblcodigoConcep;
    public javax.swing.JCheckBox rbArticulos;
    public javax.swing.JCheckBox rbTratamientos;
    public javax.swing.JTextField txtNombreConcepto;
    private javax.swing.JTextField txtNomconcepto;
    public javax.swing.JTextField txtValor;
    public javax.swing.JTextArea txtaDesconcepto;
    // End of variables declaration//GEN-END:variables

    private void cargarArticulos() {
        System.out.println("==[ begin cargarArticulos ]==");
        
        ArrayList<String[]> articulos = new ArrayList<>();

        String sql = "SELECT `pk_articulo`,`nombre`,`valor` FROM articulo;";
        System.out.println("query to execute: ["+sql+"]");
        
        articulos = gsql.SELECT(sql);
        System.out.println("articles: ["+articulos+"]");
        
        lista_Articulos = new ArrayList<>();
        for (int i = 0; i < articulos.size(); i++) { // recorre el array
            lista_Articulos.add(new String[]{articulos.get(i)[0], articulos.get(i)[1], articulos.get(i)[2]});
        }
        cargarlistArticulos();
        System.out.println("==[ end cargarArticulos ]==");
    }

    private void cargarTiposdeTratamientos() {
        ArrayList<String[]> tratamientos = new ArrayList<>();
        String sql = "SELECT `pk_tratamiento`,`descripcion` FROM tratamientos";
        tratamientos = gsql.SELECT(sql);

        lista_tratamiento = new ArrayList<>();
        for (int i = 0; i < tratamientos.size(); i++) { // recorre el array
            lista_tratamiento.add(new String[]{tratamientos.get(i)[0], tratamientos.get(i)[1]});
        }

        cargarTratamientos();
    }

    private void cargarTratamientos() {
        cbTipoTratamientos.removeAllItems();
        cbTipoTratamientos.addItem("Seleccionar");

        for (int i = 0; i < lista_tratamiento.size(); i++) {
            cbTipoTratamientos.addItem("" + lista_tratamiento.get(i)[1]);
            System.out.println("" + lista_tratamiento.get(i)[0]);

        }
    }

    private void cargarlistArticulos() {
        cbArticulos.removeAllItems();
        cbArticulos.addItem("Seleccionar");

        for (int i = 0; i < lista_Articulos.size(); i++) {
            cbArticulos.addItem("" + lista_Articulos.get(i)[1]);
            System.out.println("" + lista_Articulos.get(i)[0]);

        }
    }

    public void ConceptosEstadoFormulario(int opc) {
        ConceptosEstadoBotones(opc);
        switch (opc) {
            case 0: {//DESCARTAR
                txtNombreConcepto.setText("");
                txtaDesconcepto.setText("");
                txtValor.setText("");
                lblcodigoConcep.setText("");
                lblCodarticulos.setText("");
                lblNomArticulos.setText("");
                lblNarticulo.setText("");
                lblNtratamiento.setText("");
                lblNomArticulos.setVisible(false);

                txtaDesconcepto.setEnabled(true);
                txtNombreConcepto.setEnabled(true);
                txtValor.setEnabled(true);
                lblNtratamiento.setEnabled(true);
                lblNomArticulos.setEnabled(true);
                rbArticulos.setEnabled(true);
                rbTratamientos.setEnabled(true);

                rbArticulos.setSelected(false);
                rbTratamientos.setSelected(false);

                cbTipoTratamientos.setVisible(false);
                cbArticulos.setVisible(false);

                guardarC = 0;
                cargarArticulos();
                cargarTiposdeTratamientos();
                break;
            }
            case 2: {//MODIFICAR
                txtaDesconcepto.setEnabled(true);
                txtNombreConcepto.setEnabled(true);
                txtValor.setEnabled(true);
                lblNtratamiento.setEnabled(true);
                lblNomArticulos.setEnabled(true);
                rbArticulos.setEnabled(false);
                rbTratamientos.setEnabled(false);
                guardarC = 1;
                break;
            }
            case 3: {//CONSULTADO
                txtaDesconcepto.setEnabled(false);
                txtNombreConcepto.setEnabled(false);
                txtValor.setEnabled(false);
                lblNtratamiento.setEnabled(false);
                lblNomArticulos.setEnabled(false);
                rbArticulos.setEnabled(false);
                rbTratamientos.setEnabled(false);
                break;
            }
        }
    }

    public void ConceptosEstadoBotones(int opc) {
        switch (opc) {
            case 0: {//INICIO         
                btnCrearconcepto.setEnabled(true);
                btnEditar.setEnabled(false);
                btnDescartar.setEnabled(true);
                btnEliminar.setEnabled(false);
                btnConsultar.setEnabled(true);
                break;
            }
            case 1: {//NUEVO
                btnCrearconcepto.setEnabled(true);
                btnEditar.setEnabled(false);
                btnDescartar.setEnabled(true);
                btnEliminar.setEnabled(false);
                btnConsultar.setEnabled(false);
                break;
            }
            case 2: {//MODIFICAR
                btnCrearconcepto.setEnabled(true);
                btnEditar.setEnabled(false);
                btnDescartar.setEnabled(true);
                btnEliminar.setEnabled(true);
                btnConsultar.setEnabled(false);
                break;
            }
            case 3: {//CONSULTADO
                btnCrearconcepto.setEnabled(false);
                btnEditar.setEnabled(true);
                btnDescartar.setEnabled(true);
                btnEliminar.setEnabled(true);
                btnConsultar.setEnabled(false);
                break;
            }
        }
    }

    private void limpiarVentanaConcepto() {

        btnCrearconcepto.setEnabled(true);
        txtValor.setEnabled(true);
        txtNombreConcepto.setText("");
        txtaDesconcepto.setText("");
        lblcodigoConcep.setText("");
        lblCodarticulos.setText("");
        txtValor.setText("");
        rbArticulos.setVisible(true);
        rbTratamientos.setVisible(true);
        lblNomArticulos.setVisible(false);
        lblTipoTratamiento.setVisible(false);
        cbTipoTratamientos.setVisible(false);
        cbArticulos.setVisible(false);
        txtNombreConcepto.requestFocusInWindow();
        buttonGroup1.clearSelection();
        lblNarticulo.setText("");
        lblNtratamiento.setText("");

        txtaDesconcepto.setEnabled(true);
        txtNombreConcepto.setEnabled(true);
        txtValor.setEnabled(true);
        lblNtratamiento.setEnabled(true);
        lblNomArticulos.setEnabled(true);
        rbArticulos.setEnabled(true);
        rbTratamientos.setEnabled(true);

        guardarC = 0;
        cargarArticulos();

        cargarTiposdeTratamientos();
    }

    private void EstablecertipodeConcepto() {

        if (rbArticulos.isSelected()) {
            tipoCon = "0";
        } else if (rbTratamientos.isSelected()) {
            tipoCon = "1";
        } else {
            tipoCon = "2";
        }

        if (tipoCon.equals("0")) {
            lblNomArticulos.setVisible(true);
            cbArticulos.setVisible(true);
            lblTipoTratamiento.setVisible(false);
            cbTipoTratamientos.setVisible(false);
        } else if (tipoCon.equals("1")) {
            lblTipoTratamiento.setVisible(true);
            cbTipoTratamientos.setVisible(true);
            lblNomArticulos.setVisible(false);
            cbArticulos.setVisible(false);
            txtValor.setText("");
            txtValor.setEnabled(true);
        } else {
            lblTipoTratamiento.setVisible(false);
            cbTipoTratamientos.setVisible(false);
            lblNomArticulos.setVisible(false);
            cbArticulos.setVisible(false);
        }
    }

}
